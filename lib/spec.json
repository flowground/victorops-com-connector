{
    "openapi": "3.0.0",
    "servers": [
        {
            "url": "https://api.victorops.com/"
        }
    ],
    "info": {
        "contact": {
            "x-twitter": "VictorOps"
        },
        "description": "This API allows you to interact with the VictorOps platform in various ways. Your account may be limited\nto a total number of API calls per month. Also, some of these API calls have rate limits.\n\nNOTE: In this documentation when creating a sample curl request (clicking the TRY IT OUT! button), in some API\nviewing interfaces, the '@' in an email address may be encoded. Please note that the REST endpoints will not\nprocess the encoded version. Make sure that the encoded character '%40' is changed to its unencoded form before\nsubmitting the curl request.\n",
        "title": "VictorOps",
        "version": "0.0.3",
        "x-apisguru-categories": [
            "developer_tools"
        ],
        "x-logo": {
            "url": "https://api.apis.guru/v2/cache/logo/https_twitter.com_VictorOps_profile_image.jpeg"
        },
        "x-origin": [
            {
                "format": "swagger",
                "url": "https://portal.victorops.com/public/api-docs/victorops-api-v1.yaml",
                "version": "2.0"
            }
        ],
        "x-preferred": true,
        "x-providerName": "victorops.com"
    },
    "tags": [
        {
            "name": "On-call"
        },
        {
            "name": "Incidents"
        },
        {
            "name": "Alerts"
        },
        {
            "name": "Reporting"
        },
        {
            "name": "Users"
        },
        {
            "name": "User Contact Methods"
        },
        {
            "name": "User Paging Policies"
        },
        {
            "name": "Personal Paging Policy Values"
        },
        {
            "name": "Personal Paging Policies"
        },
        {
            "name": "Teams"
        },
        {
            "name": "Escalation Policies"
        },
        {
            "name": "Routing Keys"
        },
        {
            "name": "Scheduled Overrides"
        }
    ],
    "paths": {
        "/api-public/v1/alerts/{uuid}": {
            "get": {
                "description": "Retrieve the details of an alert that was sent VictorOps by you.\n\nThis API may be called a maximum of 6 times per minute.\n",
                "parameters": [
                    {
                        "description": "Your API ID",
                        "in": "header",
                        "name": "X-VO-Api-Id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Your API Key",
                        "in": "header",
                        "name": "X-VO-Api-Key",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The VictorOps uuid of the alert",
                        "in": "path",
                        "name": "uuid",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The alert, if found.\n",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Alert details. All fields should be considered optional.",
                                    "properties": {
                                        "ackAuthor": {
                                            "description": "The user that acknowledged the incident.",
                                            "type": "string"
                                        },
                                        "ackMsg": {
                                            "description": "A user entered comment for the acknowledgment.",
                                            "type": "string"
                                        },
                                        "entityDisplayName": {
                                            "description": "Used within VictorOps to display a human-readable name for the entity.",
                                            "type": "string"
                                        },
                                        "entityId": {
                                            "description": "Identifies the entity (host, service, etc.) this alert was about.\n",
                                            "type": "string"
                                        },
                                        "messageType": {
                                            "description": "The type of alert; INFO, WARNING, ACKNOWLEDGEMENT, CRITICAL, RECOVERY\n",
                                            "type": "string"
                                        },
                                        "monitoringTool": {
                                            "description": "The name of the monitoring system software (eg. nagios, icinga, sensu, etc.)",
                                            "type": "string"
                                        },
                                        "raw": {
                                            "description": "The full, raw alert details JSON string (i.e. parse the string into a JSON object)\n",
                                            "type": "string"
                                        },
                                        "stateMessage": {
                                            "description": "Any additional status information from the alert item.",
                                            "type": "string"
                                        },
                                        "stateStartTime": {
                                            "description": "The time this entity entered its current state (seconds since epoch).",
                                            "type": "number"
                                        },
                                        "timestamp": {
                                            "description": "Timestamp of the alert in seconds since epoch.",
                                            "type": "number"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Problem with the request arguments.  The response payload may include an error message."
                    },
                    "401": {
                        "description": "Authentication parameters missing"
                    },
                    "403": {
                        "description": "Authentication failed or rate-limit reached"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Retrieve alert details.",
                "tags": [
                    "Alerts"
                ]
            }
        },
        "/api-public/v1/incidents": {
            "get": {
                "description": "Get a list of the currently open, acknowledged and recently resolved incidents.\nThis API may be called a maximum of 6 times per minute.\n",
                "parameters": [
                    {
                        "description": "Your API ID",
                        "in": "header",
                        "name": "X-VO-Api-Id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Your API Key",
                        "in": "header",
                        "name": "X-VO-Api-Key",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The set of incidents.\n",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "The list of incidents in various states",
                                    "properties": {
                                        "incidents": {
                                            "description": "The incident data",
                                            "items": {
                                                "description": "Incidents contain the following fields (all should be considered optional)",
                                                "properties": {
                                                    "alertCount": {
                                                        "description": "The number of alerts received for this incident",
                                                        "type": "number"
                                                    },
                                                    "currentPhase": {
                                                        "description": "The current phase of the incident \"resolved\", \"triggered\" or \"acknowledged\".",
                                                        "type": "string"
                                                    },
                                                    "entityId": {
                                                        "description": "The unique identification of the entity being monitored that caused the incident",
                                                        "type": "string"
                                                    },
                                                    "host": {
                                                        "description": "The host on which the incident occurred",
                                                        "type": "string"
                                                    },
                                                    "incidentNumber": {
                                                        "description": "The VictorOps incident number",
                                                        "type": "string"
                                                    },
                                                    "lastAlertId": {
                                                        "description": "The unique id of the last alert for the incident",
                                                        "type": "string"
                                                    },
                                                    "lastAlertTime": {
                                                        "description": "The time of the last alert received for the incident",
                                                        "type": "string"
                                                    },
                                                    "pagedPolicies": {
                                                        "description": "The escalation policies that were triggered for the incident",
                                                        "items": {
                                                            "properties": {
                                                                "policy": {
                                                                    "properties": {
                                                                        "name": {
                                                                            "type": "string"
                                                                        },
                                                                        "slug": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "team": {
                                                                    "properties": {
                                                                        "name": {
                                                                            "type": "string"
                                                                        },
                                                                        "slug": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                }
                                                            },
                                                            "required": [
                                                                "policy"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "pagedTeams": {
                                                        "description": "The teams that were paged for the incident",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "pagedUsers": {
                                                        "description": "The users that were paged for the incident.",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "service": {
                                                        "description": "The service name causing the incident (if any)",
                                                        "type": "string"
                                                    },
                                                    "startTime": {
                                                        "description": "The time the incident started",
                                                        "type": "string"
                                                    },
                                                    "transitions": {
                                                        "description": "Transitions of the incident state over time",
                                                        "items": {
                                                            "description": "A transition of incident state",
                                                            "properties": {
                                                                "alertId": {
                                                                    "description": "The unique alert ID that caused the transition",
                                                                    "type": "string"
                                                                },
                                                                "alertUrl": {
                                                                    "description": "A URL to retrieve the details of the alert that caused the transition",
                                                                    "type": "string"
                                                                },
                                                                "at": {
                                                                    "description": "The time of the transition",
                                                                    "type": "string"
                                                                },
                                                                "by": {
                                                                    "description": "The user that caused the transition (if any)",
                                                                    "type": "string"
                                                                },
                                                                "manually": {
                                                                    "description": "If the incident transition was caused by a person",
                                                                    "type": "boolean"
                                                                },
                                                                "message": {
                                                                    "description": "The message entered by that user (if any)",
                                                                    "type": "string"
                                                                },
                                                                "name": {
                                                                    "description": "The transition name",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Problem with the request arguments.  The response payload may include an error message."
                    },
                    "401": {
                        "description": "Authentication parameters missing"
                    },
                    "403": {
                        "description": "Authentication failed or rate-limit reached"
                    },
                    "404": {
                        "description": "Path not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Get current incident information",
                "tags": [
                    "Incidents"
                ]
            },
            "post": {
                "description": "Create a new incident.\n\nThis call replicates the function of our\n<a href=\"https://help.victorops.com/knowledge-base/manual-incident-creation/\">manual incident creation process</a>.\nMonitoring tools and custom integrations\nshould be configured using our\n<a href=\"https://help.victorops.com/knowledge-base/victorops-restendpoint-integration/\">REST Endpoint</a>.\n\nThis API may be called a maximum of 6 times per minute.\n",
                "parameters": [
                    {
                        "description": "Your API ID",
                        "in": "header",
                        "name": "X-VO-Api-Id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Your API Key",
                        "in": "header",
                        "name": "X-VO-Api-Key",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Information about the incident created\n",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "description": "An error message",
                                            "type": "string"
                                        },
                                        "incidentNumber": {
                                            "description": "The VictorOps incident number",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Problem with the request arguments.  The response payload may include an error message."
                    },
                    "401": {
                        "description": "Authentication parameters missing"
                    },
                    "403": {
                        "description": "Authentication failed or rate-limit reached"
                    },
                    "404": {
                        "description": "Path not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Create a new incident",
                "tags": [
                    "Incidents"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "details": {
                                        "type": "string"
                                    },
                                    "summary": {
                                        "type": "string"
                                    },
                                    "targets": {
                                        "items": {
                                            "properties": {
                                                "slug": {
                                                    "description": "User name or escalation policy slug",
                                                    "type": "string"
                                                },
                                                "type": {
                                                    "description": "Type of target",
                                                    "enum": [
                                                        "User",
                                                        "EscalationPolicy"
                                                    ],
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "type",
                                                "slug"
                                            ],
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "userName": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "summary",
                                    "details",
                                    "userName",
                                    "targets"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "description": "The incident details",
                    "required": true
                }
            }
        },
        "/api-public/v1/incidents/ack": {
            "patch": {
                "description": "The incident(s) must be currently open.  The user supplied must be a valid VictorOps user and a member of your organization.\n\nThis API may be called a maximum of 6 times per minute.\n",
                "parameters": [
                    {
                        "description": "Your API ID",
                        "in": "header",
                        "name": "X-VO-Api-Id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Your API Key",
                        "in": "header",
                        "name": "X-VO-Api-Key",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The result of each acknowledge incident action.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "The results of ack/resolve for each incident",
                                    "properties": {
                                        "results": {
                                            "items": {
                                                "description": "The results of ack/resolve for a individual incident",
                                                "properties": {
                                                    "cmdAccepted": {
                                                        "type": "boolean"
                                                    },
                                                    "entityId": {
                                                        "type": "string"
                                                    },
                                                    "incidentNumber": {
                                                        "type": "string"
                                                    },
                                                    "message": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Problem with the request arguments.  The response payload may include an error message."
                    },
                    "401": {
                        "description": "Authentication parameters missing"
                    },
                    "403": {
                        "description": "Authentication failed or rate-limit reached"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Acknowledge an incident or list of incidents",
                "tags": [
                    "Incidents"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "incidentNames": {
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    "message": {
                                        "type": "string"
                                    },
                                    "userName": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "userName",
                                    "incidentNames"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "description": "Ack/Resolve payload",
                    "required": true
                }
            }
        },
        "/api-public/v1/incidents/byUser/ack": {
            "patch": {
                "description": "The incident(s) must be currently open.  The user supplied must be a valid VictorOps user and a member of your organization.\n\nThis API may be called a maximum of 6 times per minute.\n",
                "parameters": [
                    {
                        "description": "Your API ID",
                        "in": "header",
                        "name": "X-VO-Api-Id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Your API Key",
                        "in": "header",
                        "name": "X-VO-Api-Key",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The result of each acknowledge incident action.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "The results of ack/resolve for each incident",
                                    "properties": {
                                        "results": {
                                            "items": {
                                                "description": "The results of ack/resolve for a individual incident",
                                                "properties": {
                                                    "cmdAccepted": {
                                                        "type": "boolean"
                                                    },
                                                    "entityId": {
                                                        "type": "string"
                                                    },
                                                    "incidentNumber": {
                                                        "type": "string"
                                                    },
                                                    "message": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Problem with the request arguments.  The response payload may include an error message."
                    },
                    "401": {
                        "description": "Authentication parameters missing"
                    },
                    "403": {
                        "description": "Authentication failed or rate-limit reached"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Acknowledge all incidents for which a user was paged.",
                "tags": [
                    "Incidents"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "message": {
                                        "type": "string"
                                    },
                                    "userName": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "userName"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "description": "Ack/Resolve payload",
                    "required": true
                }
            }
        },
        "/api-public/v1/incidents/byUser/resolve": {
            "patch": {
                "description": "The incident(s) must be currently open.  The user supplied must be a valid VictorOps user and a member of your organization.\n\nThis API may be called a maximum of 6 times per minute.\n",
                "parameters": [
                    {
                        "description": "Your API ID",
                        "in": "header",
                        "name": "X-VO-Api-Id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Your API Key",
                        "in": "header",
                        "name": "X-VO-Api-Key",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The result of each resolve incident action.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "The results of ack/resolve for each incident",
                                    "properties": {
                                        "results": {
                                            "items": {
                                                "description": "The results of ack/resolve for a individual incident",
                                                "properties": {
                                                    "cmdAccepted": {
                                                        "type": "boolean"
                                                    },
                                                    "entityId": {
                                                        "type": "string"
                                                    },
                                                    "incidentNumber": {
                                                        "type": "string"
                                                    },
                                                    "message": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Problem with the request arguments.  The response payload may include an error message."
                    },
                    "401": {
                        "description": "Authentication parameters missing"
                    },
                    "403": {
                        "description": "Authentication failed or rate-limit reached"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Resolve all incidents for which a user was paged.",
                "tags": [
                    "Incidents"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "message": {
                                        "type": "string"
                                    },
                                    "userName": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "userName"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "description": "Ack/Resolve payload",
                    "required": true
                }
            }
        },
        "/api-public/v1/incidents/reroute": {
            "post": {
                "description": "Reroute one or more incidents to one or more users and/or escalation policies\n",
                "parameters": [
                    {
                        "description": "Your API ID",
                        "in": "header",
                        "name": "X-VO-Api-Id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Your API Key",
                        "in": "header",
                        "name": "X-VO-Api-Key",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The created reroute object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "statuses": {
                                            "items": {
                                                "properties": {
                                                    "incidentNumber": {
                                                        "type": "string"
                                                    },
                                                    "message": {
                                                        "type": "string"
                                                    },
                                                    "success": {
                                                        "type": "boolean"
                                                    },
                                                    "targetStatus": {
                                                        "items": {
                                                            "properties": {
                                                                "message": {
                                                                    "type": "string"
                                                                },
                                                                "slug": {
                                                                    "description": "User name or escalation policy slug",
                                                                    "type": "string"
                                                                },
                                                                "success": {
                                                                    "type": "boolean"
                                                                }
                                                            },
                                                            "required": [
                                                                "slug",
                                                                "success"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    }
                                                },
                                                "required": [
                                                    "incidentNumber",
                                                    "success",
                                                    "targetStatus"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "summary": "Reroute one or more incidents to one or more new routable destinations.",
                "tags": [
                    "Incidents"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "reroutes": {
                                        "items": {
                                            "properties": {
                                                "incidentNumber": {
                                                    "type": "string"
                                                },
                                                "targets": {
                                                    "items": {
                                                        "properties": {
                                                            "slug": {
                                                                "description": "User name or escalation policy slug",
                                                                "type": "string"
                                                            },
                                                            "type": {
                                                                "description": "Type of target",
                                                                "enum": [
                                                                    "User",
                                                                    "EscalationPolicy"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "type",
                                                            "slug"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                }
                                            },
                                            "required": [
                                                "incidentNumber",
                                                "targets"
                                            ],
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "userName": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "userName",
                                    "reroutes"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "description": "The reroute rules",
                    "required": true
                }
            }
        },
        "/api-public/v1/incidents/resolve": {
            "patch": {
                "description": "The incident(s) must be currently open.  The user supplied must be a valid VictorOps user and a member of your organization.\n\nThis API may be called a maximum of 6 times per minute.\n",
                "parameters": [
                    {
                        "description": "Your API ID",
                        "in": "header",
                        "name": "X-VO-Api-Id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Your API Key",
                        "in": "header",
                        "name": "X-VO-Api-Key",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The result of each resolve incident action.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "The results of ack/resolve for each incident",
                                    "properties": {
                                        "results": {
                                            "items": {
                                                "description": "The results of ack/resolve for a individual incident",
                                                "properties": {
                                                    "cmdAccepted": {
                                                        "type": "boolean"
                                                    },
                                                    "entityId": {
                                                        "type": "string"
                                                    },
                                                    "incidentNumber": {
                                                        "type": "string"
                                                    },
                                                    "message": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Problem with the request arguments.  The response payload may include an error message."
                    },
                    "401": {
                        "description": "Authentication parameters missing"
                    },
                    "403": {
                        "description": "Authentication failed or rate-limit reached"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Resolve an incident or list of incidents",
                "tags": [
                    "Incidents"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "incidentNames": {
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    "message": {
                                        "type": "string"
                                    },
                                    "userName": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "userName",
                                    "incidentNames"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "description": "Ack/Resolve payload",
                    "required": true
                }
            }
        },
        "/api-public/v1/oncall/current": {
            "get": {
                "description": "Get all on-call uesrs/teams for your organization.\n\nThis API may be called a maximum of 1 times per minute.\n",
                "parameters": [
                    {
                        "description": "Your API ID",
                        "in": "header",
                        "name": "X-VO-Api-Id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Your API Key",
                        "in": "header",
                        "name": "X-VO-Api-Key",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "All users and escalation policies currently on call",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "teamsOnCall": {
                                            "items": {
                                                "properties": {
                                                    "onCallNow": {
                                                        "items": {
                                                            "properties": {
                                                                "escalationPolicy": {
                                                                    "properties": {
                                                                        "name": {
                                                                            "type": "string"
                                                                        },
                                                                        "slug": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "users": {
                                                                    "items": {
                                                                        "properties": {
                                                                            "onCallUser": {
                                                                                "properties": {
                                                                                    "username": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "type": "array"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "team": {
                                                        "properties": {
                                                            "name": {
                                                                "type": "string"
                                                            },
                                                            "slug": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Problem with the request arguments.  The response payload may include an error message."
                    },
                    "401": {
                        "description": "Authentication parameters missing"
                    },
                    "403": {
                        "description": "Authentication failed or rate-limit reached"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Get an organization's on-call users",
                "tags": [
                    "On-call"
                ]
            }
        },
        "/api-public/v1/org/routing-keys": {
            "get": {
                "description": "Retrieves a list of routing keys and associated teams.\nThis API may be called a maximum of once a minute.",
                "parameters": [
                    {
                        "description": "Your API ID",
                        "in": "header",
                        "name": "X-VO-Api-Id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Your API Key",
                        "in": "header",
                        "name": "X-VO-Api-Key",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The list of routing keys and associated teams",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Info about routing keys in the org",
                                    "properties": {
                                        "_selfUrl": {
                                            "type": "string"
                                        },
                                        "routingKeys": {
                                            "items": {
                                                "description": "Routing keys contain the following fields",
                                                "properties": {
                                                    "isDefault": {
                                                        "type": "boolean"
                                                    },
                                                    "routingKey": {
                                                        "type": "string"
                                                    },
                                                    "targets": {
                                                        "items": {
                                                            "description": "Routing key target",
                                                            "properties": {
                                                                "_teamUrl": {
                                                                    "type": "string"
                                                                },
                                                                "policyName": {
                                                                    "type": "string"
                                                                },
                                                                "policySlug": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Problem with the request arguments.  The response payload may include an error message."
                    },
                    "401": {
                        "description": "Authentication parameters missing"
                    },
                    "403": {
                        "description": "Authentication failed or rate-limit reached"
                    },
                    "404": {
                        "description": "Path not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "List routing keys with associated teams",
                "tags": [
                    "Routing Keys"
                ]
            }
        },
        "/api-public/v1/overrides": {
            "get": {
                "description": "List all the scheduled overrides on the organization\n\nThis API may be called a maximum of 15 times per minute.\n",
                "parameters": [
                    {
                        "description": "Your API ID",
                        "in": "header",
                        "name": "X-VO-Api-Id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Your API Key",
                        "in": "header",
                        "name": "X-VO-Api-Key",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of scheduled overrides for your organization",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "_selfUrl": {
                                            "type": "string"
                                        },
                                        "overrides": {
                                            "items": {
                                                "properties": {
                                                    "assignments": {
                                                        "items": {
                                                            "properties": {
                                                                "_selfUrl": {
                                                                    "type": "string"
                                                                },
                                                                "assigned": {
                                                                    "type": "boolean"
                                                                },
                                                                "policy": {
                                                                    "type": "string"
                                                                },
                                                                "team": {
                                                                    "type": "string"
                                                                },
                                                                "user": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "end": {
                                                        "description": "The override end time (ISO 8601)",
                                                        "type": "string"
                                                    },
                                                    "publicId": {
                                                        "type": "string"
                                                    },
                                                    "start": {
                                                        "description": "The override start time (ISO 8601).",
                                                        "type": "string"
                                                    },
                                                    "timezone": {
                                                        "type": "string"
                                                    },
                                                    "user": {
                                                        "properties": {
                                                            "firstName": {
                                                                "type": "string"
                                                            },
                                                            "lastName": {
                                                                "type": "string"
                                                            },
                                                            "username": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Problem with the request arguments.  The response payload may include an error message."
                    },
                    "401": {
                        "description": "Authentication parameters missing"
                    },
                    "403": {
                        "description": "Authentication failed or rate-limit reached"
                    },
                    "404": {
                        "description": "Path not found"
                    },
                    "422": {
                        "description": "You have reached your user limit.\n"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "List the scheduled overrides",
                "tags": [
                    "Scheduled Overrides"
                ]
            },
            "post": {
                "description": "Creates a new scheduled override. Start and end dates are in ISO8601 format. E.g. `2018-09-28'T'05:00:00Z`\n\nThis API may be called a maximum of 15 times per minute.\n",
                "parameters": [
                    {
                        "description": "Your API ID",
                        "in": "header",
                        "name": "X-VO-Api-Id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Your API Key",
                        "in": "header",
                        "name": "X-VO-Api-Key",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The created scheduled override",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "_selfUrl": {
                                            "type": "string"
                                        },
                                        "schedule": {
                                            "properties": {
                                                "assignments": {
                                                    "items": {
                                                        "properties": {
                                                            "_selfUrl": {
                                                                "type": "string"
                                                            },
                                                            "assigned": {
                                                                "type": "boolean"
                                                            },
                                                            "policy": {
                                                                "type": "string"
                                                            },
                                                            "team": {
                                                                "type": "string"
                                                            },
                                                            "user": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "end": {
                                                    "description": "The override end time (ISO 8601)",
                                                    "type": "string"
                                                },
                                                "publicId": {
                                                    "type": "string"
                                                },
                                                "start": {
                                                    "description": "The override start time (ISO 8601).",
                                                    "type": "string"
                                                },
                                                "timezone": {
                                                    "type": "string"
                                                },
                                                "user": {
                                                    "properties": {
                                                        "firstName": {
                                                            "type": "string"
                                                        },
                                                        "lastName": {
                                                            "type": "string"
                                                        },
                                                        "username": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Problem with the request arguments.  The response payload may include an error message."
                    },
                    "401": {
                        "description": "Authentication parameters missing"
                    },
                    "403": {
                        "description": "Authentication failed or rate-limit reached"
                    },
                    "404": {
                        "description": "Path not found"
                    },
                    "422": {
                        "description": "You have reached your user limit.\n"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Creates a new scheduled override",
                "tags": [
                    "Scheduled Overrides"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "end": {
                                        "description": "The override end time (ISO 8601)",
                                        "type": "string"
                                    },
                                    "start": {
                                        "description": "The override start time (ISO 8601)",
                                        "type": "string"
                                    },
                                    "timezone": {
                                        "type": "string"
                                    },
                                    "username": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/api-public/v1/overrides/{publicId}": {
            "delete": {
                "description": "Deletes a scheduled override\n\nThis API may be called a maximum of 15 times per minute.\n",
                "parameters": [
                    {
                        "description": "Your API ID",
                        "in": "header",
                        "name": "X-VO-Api-Id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Your API Key",
                        "in": "header",
                        "name": "X-VO-Api-Key",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The publicId of the scheduled override",
                        "in": "path",
                        "name": "publicId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Whether or not the delete was successful"
                    },
                    "400": {
                        "description": "Problem with the request arguments.  The response payload may include an error message."
                    },
                    "401": {
                        "description": "Authentication parameters missing"
                    },
                    "403": {
                        "description": "Authentication failed or rate-limit reached"
                    },
                    "404": {
                        "description": "Path not found"
                    },
                    "422": {
                        "description": "You have reached your user limit.\n"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Deletes a scheduled override",
                "tags": [
                    "Scheduled Overrides"
                ]
            },
            "get": {
                "description": "Get the specified scheduled override\n\nThis API may be called a maximum of 15 times per minute.\n",
                "parameters": [
                    {
                        "description": "Your API ID",
                        "in": "header",
                        "name": "X-VO-Api-Id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Your API Key",
                        "in": "header",
                        "name": "X-VO-Api-Key",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The publicId of the scheduled override",
                        "in": "path",
                        "name": "publicId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The scheduled override",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "_selfUrl": {
                                            "type": "string"
                                        },
                                        "override": {
                                            "properties": {
                                                "assignments": {
                                                    "items": {
                                                        "properties": {
                                                            "_selfUrl": {
                                                                "type": "string"
                                                            },
                                                            "assigned": {
                                                                "type": "boolean"
                                                            },
                                                            "policy": {
                                                                "type": "string"
                                                            },
                                                            "team": {
                                                                "type": "string"
                                                            },
                                                            "user": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "end": {
                                                    "description": "The override end time (ISO 8601)",
                                                    "type": "string"
                                                },
                                                "publicId": {
                                                    "type": "string"
                                                },
                                                "start": {
                                                    "description": "The override start time (ISO 8601).",
                                                    "type": "string"
                                                },
                                                "timezone": {
                                                    "type": "string"
                                                },
                                                "user": {
                                                    "properties": {
                                                        "firstName": {
                                                            "type": "string"
                                                        },
                                                        "lastName": {
                                                            "type": "string"
                                                        },
                                                        "username": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Problem with the request arguments.  The response payload may include an error message."
                    },
                    "401": {
                        "description": "Authentication parameters missing"
                    },
                    "403": {
                        "description": "Authentication failed or rate-limit reached"
                    },
                    "404": {
                        "description": "Path not found"
                    },
                    "422": {
                        "description": "You have reached your user limit.\n"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Get the specified scheduled override",
                "tags": [
                    "Scheduled Overrides"
                ]
            }
        },
        "/api-public/v1/overrides/{publicId}/assignments": {
            "get": {
                "description": "Get the specified scheduled override assignments\n",
                "parameters": [
                    {
                        "description": "Your API ID",
                        "in": "header",
                        "name": "X-VO-Api-Id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Your API Key",
                        "in": "header",
                        "name": "X-VO-Api-Key",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The publicId of the scheduled override",
                        "in": "path",
                        "name": "publicId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The assignments for a given scheduled override",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "properties": {
                                            "_selfUrl": {
                                                "type": "string"
                                            },
                                            "assigned": {
                                                "type": "boolean"
                                            },
                                            "policy": {
                                                "type": "string"
                                            },
                                            "team": {
                                                "type": "string"
                                            },
                                            "user": {
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Problem with the request arguments.  The response payload may include an error message."
                    },
                    "401": {
                        "description": "Authentication parameters missing"
                    },
                    "403": {
                        "description": "Authentication failed or rate-limit reached"
                    },
                    "404": {
                        "description": "Path not found"
                    },
                    "422": {
                        "description": "You have reached your user limit.\n"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Get the specified scheduled override",
                "tags": [
                    "Scheduled Overrides"
                ]
            }
        },
        "/api-public/v1/overrides/{publicId}/assignments/{policySlug}": {
            "delete": {
                "description": "Delete the scheduled override assignment\n",
                "parameters": [
                    {
                        "description": "Your API ID",
                        "in": "header",
                        "name": "X-VO-Api-Id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Your API Key",
                        "in": "header",
                        "name": "X-VO-Api-Key",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The publicId of the scheduled override",
                        "in": "path",
                        "name": "publicId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The policySlug of the assignment",
                        "in": "path",
                        "name": "policySlug",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The assignment that was deleted for the given scheduled override and policySlug",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "_selfUrl": {
                                            "type": "string"
                                        },
                                        "assigned": {
                                            "type": "boolean"
                                        },
                                        "policy": {
                                            "type": "string"
                                        },
                                        "team": {
                                            "type": "string"
                                        },
                                        "user": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Problem with the request arguments.  The response payload may include an error message."
                    },
                    "401": {
                        "description": "Authentication parameters missing"
                    },
                    "403": {
                        "description": "Authentication failed or rate-limit reached"
                    },
                    "404": {
                        "description": "Path not found"
                    },
                    "422": {
                        "description": "You have reached your user limit.\n"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Delete the scheduled override assignment",
                "tags": [
                    "Scheduled Overrides"
                ]
            },
            "get": {
                "description": "Get the specified scheduled override assignments\n",
                "parameters": [
                    {
                        "description": "Your API ID",
                        "in": "header",
                        "name": "X-VO-Api-Id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Your API Key",
                        "in": "header",
                        "name": "X-VO-Api-Key",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The publicId of the scheduled override",
                        "in": "path",
                        "name": "publicId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The policySlug of the assignment",
                        "in": "path",
                        "name": "policySlug",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The assignment for the given publicId",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "_selfUrl": {
                                            "type": "string"
                                        },
                                        "assigned": {
                                            "type": "boolean"
                                        },
                                        "policy": {
                                            "type": "string"
                                        },
                                        "team": {
                                            "type": "string"
                                        },
                                        "user": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Problem with the request arguments.  The response payload may include an error message."
                    },
                    "401": {
                        "description": "Authentication parameters missing"
                    },
                    "403": {
                        "description": "Authentication failed or rate-limit reached"
                    },
                    "404": {
                        "description": "Path not found"
                    },
                    "422": {
                        "description": "You have reached your user limit.\n"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Get the specified scheduled override assignment",
                "tags": [
                    "Scheduled Overrides"
                ]
            },
            "put": {
                "description": "Update the scheduled override assignment\n",
                "parameters": [
                    {
                        "description": "Your API ID",
                        "in": "header",
                        "name": "X-VO-Api-Id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Your API Key",
                        "in": "header",
                        "name": "X-VO-Api-Key",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The publicId of the scheduled override",
                        "in": "path",
                        "name": "publicId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The policySlug of the assignment",
                        "in": "path",
                        "name": "policySlug",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The assignment for the given policySlug",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "_selfUrl": {
                                            "type": "string"
                                        },
                                        "assigned": {
                                            "type": "boolean"
                                        },
                                        "policy": {
                                            "type": "string"
                                        },
                                        "team": {
                                            "type": "string"
                                        },
                                        "user": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Problem with the request arguments.  The response payload may include an error message."
                    },
                    "401": {
                        "description": "Authentication parameters missing"
                    },
                    "403": {
                        "description": "Authentication failed or rate-limit reached"
                    },
                    "404": {
                        "description": "Path not found"
                    },
                    "422": {
                        "description": "You have reached your user limit.\n"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Update the scheduled override assignment",
                "tags": [
                    "Scheduled Overrides"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "policy": {
                                        "description": "The policy slug",
                                        "type": "string"
                                    },
                                    "username": {
                                        "description": "The username being assinged",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "policy"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "description": "The policy and username we are assigning",
                    "required": true
                }
            }
        },
        "/api-public/v1/policies": {
            "get": {
                "description": "Retrieves a list of escalation policy information.\nThis API may be called a maximum of once a minute",
                "parameters": [
                    {
                        "description": "Your API ID",
                        "in": "header",
                        "name": "X-VO-Api-Id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Your API Key",
                        "in": "header",
                        "name": "X-VO-Api-Key",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The list of escalation policies",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "policies": {
                                            "items": {
                                                "properties": {
                                                    "policy": {
                                                        "properties": {
                                                            "name": {
                                                                "type": "string"
                                                            },
                                                            "slug": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "team": {
                                                        "properties": {
                                                            "name": {
                                                                "type": "string"
                                                            },
                                                            "slug": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "required": [
                                                    "policy"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "required": [
                                        "policies"
                                    ],
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Problem with the request arguments.  The response payload may include an error message."
                    },
                    "401": {
                        "description": "Authentication parameters missing"
                    },
                    "403": {
                        "description": "Authentication failed or rate-limit reached"
                    },
                    "404": {
                        "description": "Path not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Get escalation policy info",
                "tags": [
                    "Escalation Policies"
                ]
            }
        },
        "/api-public/v1/policies/types/contacts": {
            "get": {
                "description": "Get the available contact types\n\ndescription: \"Email Address\", type: \"email\"\ndescription: \"Phone Number\", type: \"phone\"\n\nThis API may be called a maximum of 15 times per minute.\n",
                "parameters": [
                    {
                        "description": "Your API ID",
                        "in": "header",
                        "name": "X-VO-Api-Id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Your API Key",
                        "in": "header",
                        "name": "X-VO-Api-Key",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "All the available contact types",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "_selfUrl": {
                                            "type": "string"
                                        },
                                        "contactTypes": {
                                            "items": {
                                                "properties": {
                                                    "description": {
                                                        "enum": [
                                                            "Email Address",
                                                            "Phone Number"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "type": {
                                                        "enum": [
                                                            "email",
                                                            "phone"
                                                        ],
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Problem with the request arguments.  The response payload may include an error message."
                    },
                    "401": {
                        "description": "Authentication parameters missing"
                    },
                    "403": {
                        "description": "Authentication failed or rate-limit reached"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Get the available contact types",
                "tags": [
                    "Personal Paging Policy Values"
                ]
            }
        },
        "/api-public/v1/policies/types/notifications": {
            "get": {
                "description": "Get the available notification types\n\ndescription: \"Send a push notification to all my devices\", type: \"push\"\ndescription: \"Send an email to an email address\", type: \"email\"\ndescription: \"Send an SMS to a phone number\", type: \"sms\"\ndescription: \"Make a phone call to a phone number\", type: \"phone\"\n\nThis API may be called a maximum of 15 times per minute.\n",
                "parameters": [
                    {
                        "description": "Your API ID",
                        "in": "header",
                        "name": "X-VO-Api-Id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Your API Key",
                        "in": "header",
                        "name": "X-VO-Api-Key",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "All the available contact types",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "_selfUrl": {
                                            "type": "string"
                                        },
                                        "notificationTypes": {
                                            "items": {
                                                "properties": {
                                                    "description": {
                                                        "enum": [
                                                            "Send a push notification to all my devices",
                                                            "Send an email to an email address",
                                                            "Send an SMS to a phone number",
                                                            "Make a phone call to a phone number"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "type": {
                                                        "enum": [
                                                            "push",
                                                            "email",
                                                            "sms",
                                                            "phone"
                                                        ],
                                                        "example": "email",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Problem with the request arguments.  The response payload may include an error message."
                    },
                    "401": {
                        "description": "Authentication parameters missing"
                    },
                    "403": {
                        "description": "Authentication failed or rate-limit reached"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Get the available notification types",
                "tags": [
                    "Personal Paging Policy Values"
                ]
            }
        },
        "/api-public/v1/policies/types/timeouts": {
            "get": {
                "description": "Get the available timeout values\n\ndescription: \"If still unacked after 1 minute\", type: 1\ndescription: \"If still unacked after 5 minutes\", type: 5\ndescription: \"If still unacked after 10 minutes\", type: 10\ndescription: \"If still unacked after 15 minutes\", type: 15\ndescription: \"If still unacked after 20 minutes\", type: 20\ndescription: \"If still unacked after 25 minutes\", type: 25\ndescription: \"If still unacked after 30 minutes\", type: 30\ndescription: \"If still unacked after 45 minutes\", type: 45\ndescription: \"If still unacked after 60 minutes\", type: 60\n\nThis API may be called a maximum of 15 times per minute.\n",
                "parameters": [
                    {
                        "description": "Your API ID",
                        "in": "header",
                        "name": "X-VO-Api-Id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Your API Key",
                        "in": "header",
                        "name": "X-VO-Api-Key",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "All the available timeout types.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "_selfUrl": {
                                            "type": "string"
                                        },
                                        "timeoutTypes": {
                                            "items": {
                                                "properties": {
                                                    "description": {
                                                        "enum": [
                                                            "If still unacked after 1 minute",
                                                            "If still unacked after 5 minute",
                                                            "If still unacked after 10 minute",
                                                            "If still unacked after 15 minute",
                                                            "If still unacked after 20 minute",
                                                            "If still unacked after 25 minute",
                                                            "If still unacked after 30 minute",
                                                            "If still unacked after 45 minute",
                                                            "If still unacked after 60 minute"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "type": {
                                                        "enum": [
                                                            1,
                                                            5,
                                                            10,
                                                            15,
                                                            20,
                                                            25,
                                                            30,
                                                            45,
                                                            60
                                                        ],
                                                        "type": "integer"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Problem with the request arguments.  The response payload may include an error message."
                    },
                    "401": {
                        "description": "Authentication parameters missing"
                    },
                    "403": {
                        "description": "Authentication failed or rate-limit reached"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Get the available timeout values",
                "tags": [
                    "Personal Paging Policy Values"
                ]
            }
        },
        "/api-public/v1/policies/{policy}/oncall/user": {
            "patch": {
                "description": "Replaces a currently on-call user in the escalation policy with another.  In many cases, the policy slug\nwill match the slug of the team that contains it.\n\nThis API may be called a maximum of 6 times per minute.\n",
                "parameters": [
                    {
                        "description": "Your API ID",
                        "in": "header",
                        "name": "X-VO-Api-Id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Your API Key",
                        "in": "header",
                        "name": "X-VO-Api-Key",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The VictorOps policy 'slug'",
                        "in": "path",
                        "name": "policy",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The result of the take request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "result": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Problem with the request arguments.  The response payload may include an error message."
                    },
                    "401": {
                        "description": "Authentication parameters missing"
                    },
                    "403": {
                        "description": "Authentication failed or rate-limit reached"
                    },
                    "404": {
                        "description": "Team or user(s) not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Create an on-call override (take on-call)",
                "tags": [
                    "On-call"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "fromUser": {
                                        "type": "string"
                                    },
                                    "toUser": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "fromUser",
                                    "toUser"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "description": "The take on-call payload",
                    "required": true
                }
            }
        },
        "/api-public/v1/profile/{username}/policies": {
            "get": {
                "description": "Get all the paging policy steps for the user on the org associated with the API key\n\nThis API may be called a maximum of 15 times per minute.\n",
                "parameters": [
                    {
                        "description": "Your username",
                        "in": "path",
                        "name": "username",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Your API ID",
                        "in": "header",
                        "name": "X-VO-Api-Id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Your API Key",
                        "in": "header",
                        "name": "X-VO-Api-Key",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "All steps of the user's paging policy",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "_selfUrl": {
                                            "type": "string"
                                        },
                                        "steps": {
                                            "items": {
                                                "properties": {
                                                    "index": {
                                                        "type": "number"
                                                    },
                                                    "rules": {
                                                        "items": {
                                                            "properties": {
                                                                "contact": {
                                                                    "properties": {
                                                                        "id": {
                                                                            "type": "number"
                                                                        },
                                                                        "type": {
                                                                            "enum": [
                                                                                "email",
                                                                                "phone"
                                                                            ],
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "index": {
                                                                    "type": "number"
                                                                },
                                                                "type": {
                                                                    "enum": [
                                                                        "push",
                                                                        "email",
                                                                        "sms",
                                                                        "phone"
                                                                    ],
                                                                    "example": "email",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "timeout": {
                                                        "enum": [
                                                            1,
                                                            5,
                                                            10,
                                                            15,
                                                            20,
                                                            25,
                                                            30,
                                                            45,
                                                            60
                                                        ],
                                                        "type": "integer"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Problem with the request arguments.  The response payload may include an error message."
                    },
                    "401": {
                        "description": "Authentication parameters missing"
                    },
                    "403": {
                        "description": "Authentication failed or rate-limit reached"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Get the user's paging policy",
                "tags": [
                    "Personal Paging Policies"
                ]
            },
            "post": {
                "description": "Create a paging policy step\n\nThis API may be called a maximum of 15 times per minute.\n",
                "parameters": [
                    {
                        "description": "Your username",
                        "in": "path",
                        "name": "username",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Your API ID",
                        "in": "header",
                        "name": "X-VO-Api-Id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Your API Key",
                        "in": "header",
                        "name": "X-VO-Api-Key",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The created paging policy step",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "_selfUrl": {
                                            "type": "string"
                                        },
                                        "step": {
                                            "properties": {
                                                "index": {
                                                    "type": "number"
                                                },
                                                "rules": {
                                                    "items": {
                                                        "properties": {
                                                            "contact": {
                                                                "properties": {
                                                                    "id": {
                                                                        "type": "number"
                                                                    },
                                                                    "type": {
                                                                        "enum": [
                                                                            "email",
                                                                            "phone"
                                                                        ],
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "index": {
                                                                "type": "number"
                                                            },
                                                            "type": {
                                                                "enum": [
                                                                    "push",
                                                                    "email",
                                                                    "sms",
                                                                    "phone"
                                                                ],
                                                                "example": "email",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "timeout": {
                                                    "enum": [
                                                        1,
                                                        5,
                                                        10,
                                                        15,
                                                        20,
                                                        25,
                                                        30,
                                                        45,
                                                        60
                                                    ],
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Problem with the request arguments.  The response payload may include an error message."
                    },
                    "401": {
                        "description": "Authentication parameters missing"
                    },
                    "403": {
                        "description": "Authentication failed or rate-limit reached"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Create a paging policy step",
                "tags": [
                    "Personal Paging Policies"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "rules": {
                                        "items": {
                                            "properties": {
                                                "contact": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "number"
                                                        },
                                                        "type": {
                                                            "enum": [
                                                                "email",
                                                                "phone"
                                                            ],
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "type": {
                                                    "enum": [
                                                        "push",
                                                        "email",
                                                        "sms",
                                                        "phone"
                                                    ],
                                                    "example": "email",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "timeout": {
                                        "enum": [
                                            1,
                                            5,
                                            10,
                                            15,
                                            20,
                                            25,
                                            30,
                                            45,
                                            60
                                        ],
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/api-public/v1/profile/{username}/policies/{step}": {
            "get": {
                "description": "Get a paging policy step\n\nThis API may be called a maximum of 15 times per minute.\n",
                "parameters": [
                    {
                        "description": "Your username",
                        "in": "path",
                        "name": "username",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Paging policy step",
                        "in": "path",
                        "name": "step",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "description": "Your API ID",
                        "in": "header",
                        "name": "X-VO-Api-Id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Your API Key",
                        "in": "header",
                        "name": "X-VO-Api-Key",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The paging policy step",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "_selfUrl": {
                                            "type": "string"
                                        },
                                        "step": {
                                            "properties": {
                                                "index": {
                                                    "type": "number"
                                                },
                                                "rules": {
                                                    "items": {
                                                        "properties": {
                                                            "contact": {
                                                                "properties": {
                                                                    "id": {
                                                                        "type": "number"
                                                                    },
                                                                    "type": {
                                                                        "enum": [
                                                                            "email",
                                                                            "phone"
                                                                        ],
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "index": {
                                                                "type": "number"
                                                            },
                                                            "type": {
                                                                "enum": [
                                                                    "push",
                                                                    "email",
                                                                    "sms",
                                                                    "phone"
                                                                ],
                                                                "example": "email",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "timeout": {
                                                    "enum": [
                                                        1,
                                                        5,
                                                        10,
                                                        15,
                                                        20,
                                                        25,
                                                        30,
                                                        45,
                                                        60
                                                    ],
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Problem with the request arguments.  The response payload may include an error message."
                    },
                    "401": {
                        "description": "Authentication parameters missing"
                    },
                    "403": {
                        "description": "Authentication failed or rate-limit reached"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Get a paging policy step",
                "tags": [
                    "Personal Paging Policies"
                ]
            },
            "post": {
                "description": "Create a rule for a paging policy step\n\nThis API may be called a maximum of 15 times per minute.\n",
                "parameters": [
                    {
                        "description": "Your username",
                        "in": "path",
                        "name": "username",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Paging policy step",
                        "in": "path",
                        "name": "step",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "description": "Your API ID",
                        "in": "header",
                        "name": "X-VO-Api-Id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Your API Key",
                        "in": "header",
                        "name": "X-VO-Api-Key",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The created rule for the paging policy step",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "_selfUrl": {
                                            "type": "string"
                                        },
                                        "stepRule": {
                                            "properties": {
                                                "contact": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "number"
                                                        },
                                                        "type": {
                                                            "enum": [
                                                                "email",
                                                                "phone"
                                                            ],
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "index": {
                                                    "type": "number"
                                                },
                                                "type": {
                                                    "enum": [
                                                        "push",
                                                        "email",
                                                        "sms",
                                                        "phone"
                                                    ],
                                                    "example": "email",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Problem with the request arguments.  The response payload may include an error message."
                    },
                    "401": {
                        "description": "Authentication parameters missing"
                    },
                    "403": {
                        "description": "Authentication failed or rate-limit reached"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Create a rule for a paging policy step",
                "tags": [
                    "Personal Paging Policies"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "contact": {
                                        "properties": {
                                            "id": {
                                                "type": "number"
                                            },
                                            "type": {
                                                "enum": [
                                                    "email",
                                                    "phone"
                                                ],
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": {
                                        "enum": [
                                            "push",
                                            "email",
                                            "sms",
                                            "phone"
                                        ],
                                        "example": "email",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            },
            "put": {
                "description": "Update a paging policy step\n\nThis API may be called a maximum of 15 times per minute.\n",
                "parameters": [
                    {
                        "description": "Your username",
                        "in": "path",
                        "name": "username",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Paging policy step",
                        "in": "path",
                        "name": "step",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "description": "Your API ID",
                        "in": "header",
                        "name": "X-VO-Api-Id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Your API Key",
                        "in": "header",
                        "name": "X-VO-Api-Key",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The updated paging policy step",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "_selfUrl": {
                                            "type": "string"
                                        },
                                        "step": {
                                            "properties": {
                                                "index": {
                                                    "type": "number"
                                                },
                                                "rules": {
                                                    "items": {
                                                        "properties": {
                                                            "contact": {
                                                                "properties": {
                                                                    "id": {
                                                                        "type": "number"
                                                                    },
                                                                    "type": {
                                                                        "enum": [
                                                                            "email",
                                                                            "phone"
                                                                        ],
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "index": {
                                                                "type": "number"
                                                            },
                                                            "type": {
                                                                "enum": [
                                                                    "push",
                                                                    "email",
                                                                    "sms",
                                                                    "phone"
                                                                ],
                                                                "example": "email",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "timeout": {
                                                    "enum": [
                                                        1,
                                                        5,
                                                        10,
                                                        15,
                                                        20,
                                                        25,
                                                        30,
                                                        45,
                                                        60
                                                    ],
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Problem with the request arguments.  The response payload may include an error message."
                    },
                    "401": {
                        "description": "Authentication parameters missing"
                    },
                    "403": {
                        "description": "Authentication failed or rate-limit reached"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Update a paging policy step",
                "tags": [
                    "Personal Paging Policies"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "rules": {
                                        "items": {
                                            "properties": {
                                                "contact": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "number"
                                                        },
                                                        "type": {
                                                            "enum": [
                                                                "email",
                                                                "phone"
                                                            ],
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "type": {
                                                    "enum": [
                                                        "push",
                                                        "email",
                                                        "sms",
                                                        "phone"
                                                    ],
                                                    "example": "email",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "timeout": {
                                        "enum": [
                                            1,
                                            5,
                                            10,
                                            15,
                                            20,
                                            25,
                                            30,
                                            45,
                                            60
                                        ],
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/api-public/v1/profile/{username}/policies/{step}/{rule}": {
            "delete": {
                "description": "Delete a rule from a paging policy step\n\nThis API may be called a maximum of 15 times per minute.\n",
                "parameters": [
                    {
                        "description": "Your username",
                        "in": "path",
                        "name": "username",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Paging policy step",
                        "in": "path",
                        "name": "step",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "description": "Rule for a paging policy step",
                        "in": "path",
                        "name": "rule",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "description": "Your API ID",
                        "in": "header",
                        "name": "X-VO-Api-Id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Your API Key",
                        "in": "header",
                        "name": "X-VO-Api-Key",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The deleted rule from the paging policy step",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "_selfUrl": {
                                            "type": "string"
                                        },
                                        "stepRule": {
                                            "properties": {
                                                "contact": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "number"
                                                        },
                                                        "type": {
                                                            "enum": [
                                                                "email",
                                                                "phone"
                                                            ],
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "index": {
                                                    "type": "number"
                                                },
                                                "type": {
                                                    "enum": [
                                                        "push",
                                                        "email",
                                                        "sms",
                                                        "phone"
                                                    ],
                                                    "example": "email",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Problem with the request arguments.  The response payload may include an error message."
                    },
                    "401": {
                        "description": "Authentication parameters missing"
                    },
                    "403": {
                        "description": "Authentication failed or rate-limit reached"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Delete a rule from a paging policy step",
                "tags": [
                    "Personal Paging Policies"
                ]
            },
            "get": {
                "description": "Get a rule from a paging policy step\n\nThis API may be called a maximum of 15 times per minute.\n",
                "parameters": [
                    {
                        "description": "Your username",
                        "in": "path",
                        "name": "username",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Paging policy step",
                        "in": "path",
                        "name": "step",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "description": "Rule for a paging policy step",
                        "in": "path",
                        "name": "rule",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "description": "Your API ID",
                        "in": "header",
                        "name": "X-VO-Api-Id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Your API Key",
                        "in": "header",
                        "name": "X-VO-Api-Key",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The rule from the paging policy step",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "_selfUrl": {
                                            "type": "string"
                                        },
                                        "stepRule": {
                                            "properties": {
                                                "contact": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "number"
                                                        },
                                                        "type": {
                                                            "enum": [
                                                                "email",
                                                                "phone"
                                                            ],
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "index": {
                                                    "type": "number"
                                                },
                                                "type": {
                                                    "enum": [
                                                        "push",
                                                        "email",
                                                        "sms",
                                                        "phone"
                                                    ],
                                                    "example": "email",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Problem with the request arguments.  The response payload may include an error message."
                    },
                    "401": {
                        "description": "Authentication parameters missing"
                    },
                    "403": {
                        "description": "Authentication failed or rate-limit reached"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Get a rule from a paging policy step",
                "tags": [
                    "Personal Paging Policies"
                ]
            },
            "put": {
                "description": "Update a rule for a paging policy step\n\nThis API may be called a maximum of 15 times per minute.\n",
                "parameters": [
                    {
                        "description": "Your username",
                        "in": "path",
                        "name": "username",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Paging policy step",
                        "in": "path",
                        "name": "step",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "description": "Rule for a paging policy step",
                        "in": "path",
                        "name": "rule",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "description": "Your API ID",
                        "in": "header",
                        "name": "X-VO-Api-Id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Your API Key",
                        "in": "header",
                        "name": "X-VO-Api-Key",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The updated rule for the paging policy step",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "_selfUrl": {
                                            "type": "string"
                                        },
                                        "stepRule": {
                                            "properties": {
                                                "contact": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "number"
                                                        },
                                                        "type": {
                                                            "enum": [
                                                                "email",
                                                                "phone"
                                                            ],
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "index": {
                                                    "type": "number"
                                                },
                                                "type": {
                                                    "enum": [
                                                        "push",
                                                        "email",
                                                        "sms",
                                                        "phone"
                                                    ],
                                                    "example": "email",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Problem with the request arguments.  The response payload may include an error message."
                    },
                    "401": {
                        "description": "Authentication parameters missing"
                    },
                    "403": {
                        "description": "Authentication failed or rate-limit reached"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Update a rule for a paging policy step",
                "tags": [
                    "Personal Paging Policies"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "contact": {
                                        "properties": {
                                            "id": {
                                                "type": "number"
                                            },
                                            "type": {
                                                "enum": [
                                                    "email",
                                                    "phone"
                                                ],
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": {
                                        "enum": [
                                            "push",
                                            "email",
                                            "sms",
                                            "phone"
                                        ],
                                        "example": "email",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/api-public/v1/team": {
            "get": {
                "description": "Get a list of teams for your organization.\n\nThis API may be called a maximum of 15 times per minute.\n",
                "parameters": [
                    {
                        "description": "Your API ID",
                        "in": "header",
                        "name": "X-VO-Api-Id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Your API Key",
                        "in": "header",
                        "name": "X-VO-Api-Key",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of teams for your organization",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "description": "Some info about the team",
                                        "properties": {
                                            "_adminsUrl": {
                                                "type": "string"
                                            },
                                            "_membersUrl": {
                                                "type": "string"
                                            },
                                            "_policiesUrl": {
                                                "type": "string"
                                            },
                                            "_selfUrl": {
                                                "type": "string"
                                            },
                                            "isDefaultTeam": {
                                                "type": "boolean"
                                            },
                                            "memberCount": {
                                                "type": "number"
                                            },
                                            "name": {
                                                "type": "string"
                                            },
                                            "slug": {
                                                "type": "string"
                                            },
                                            "version": {
                                                "type": "number"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Problem with the request arguments.  The response payload may include an error message."
                    },
                    "401": {
                        "description": "Authentication parameters missing"
                    },
                    "403": {
                        "description": "Authentication failed or rate-limit reached"
                    },
                    "404": {
                        "description": "Team not found"
                    },
                    "422": {
                        "description": "You have reached your team limit.\n"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "List teams",
                "tags": [
                    "Teams"
                ]
            },
            "post": {
                "description": "Add a team to your organization.\n\nThis API may be called a maximum of 15 times per minute.\n",
                "parameters": [
                    {
                        "description": "Your API ID",
                        "in": "header",
                        "name": "X-VO-Api-Id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Your API Key",
                        "in": "header",
                        "name": "X-VO-Api-Key",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Some details about the team that was added",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Some info about the team",
                                    "properties": {
                                        "_adminsUrl": {
                                            "type": "string"
                                        },
                                        "_membersUrl": {
                                            "type": "string"
                                        },
                                        "_policiesUrl": {
                                            "type": "string"
                                        },
                                        "_selfUrl": {
                                            "type": "string"
                                        },
                                        "isDefaultTeam": {
                                            "type": "boolean"
                                        },
                                        "memberCount": {
                                            "type": "number"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "slug": {
                                            "type": "string"
                                        },
                                        "version": {
                                            "type": "number"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Problem with the request arguments.  The response payload may include an error message."
                    },
                    "401": {
                        "description": "Authentication parameters missing"
                    },
                    "403": {
                        "description": "Authentication failed or rate-limit reached"
                    },
                    "404": {
                        "description": "Team not found"
                    },
                    "422": {
                        "description": "Team name or email is unavailable, or you have reached your team limit.\n"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Add a team",
                "tags": [
                    "Teams"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "The team information",
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "name"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "description": "The team information",
                    "required": true
                }
            }
        },
        "/api-public/v1/team/{team}": {
            "delete": {
                "description": "Remove a team from your organization.\n\nThis API may be called a maximum of 15 times per minute.\n",
                "parameters": [
                    {
                        "description": "Your API ID",
                        "in": "header",
                        "name": "X-VO-Api-Id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Your API Key",
                        "in": "header",
                        "name": "X-VO-Api-Key",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The VictorOps team to be deleted",
                        "in": "path",
                        "name": "team",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Team was deleted"
                    },
                    "400": {
                        "description": "Problem with the request arguments.  The response payload may include an error message."
                    },
                    "401": {
                        "description": "Authentication parameters missing"
                    },
                    "403": {
                        "description": "Authentication failed or rate-limit reached"
                    },
                    "404": {
                        "description": "Team not found"
                    },
                    "422": {
                        "description": "There was a problem with the delete such as the replacement team was not found.\n"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Remove a team",
                "tags": [
                    "Teams"
                ]
            },
            "get": {
                "description": "Get the information for the specified team.\n\nThis API may be called a maximum of 15 times per minute.\n",
                "parameters": [
                    {
                        "description": "Your API ID",
                        "in": "header",
                        "name": "X-VO-Api-Id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Your API Key",
                        "in": "header",
                        "name": "X-VO-Api-Key",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The VictorOps team to fetch",
                        "in": "path",
                        "name": "team",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Some details about the team that was added",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Some info about the team",
                                    "properties": {
                                        "_adminsUrl": {
                                            "type": "string"
                                        },
                                        "_membersUrl": {
                                            "type": "string"
                                        },
                                        "_policiesUrl": {
                                            "type": "string"
                                        },
                                        "_selfUrl": {
                                            "type": "string"
                                        },
                                        "isDefaultTeam": {
                                            "type": "boolean"
                                        },
                                        "memberCount": {
                                            "type": "number"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "slug": {
                                            "type": "string"
                                        },
                                        "version": {
                                            "type": "number"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Problem with the request arguments.  The response payload may include an error message."
                    },
                    "401": {
                        "description": "Authentication parameters missing"
                    },
                    "403": {
                        "description": "Authentication failed or rate-limit reached"
                    },
                    "404": {
                        "description": "Team not found"
                    },
                    "422": {
                        "description": "Team name or email is unavailable, or you have reached your team limit.\n"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Retrieve information for a team",
                "tags": [
                    "Teams"
                ]
            },
            "put": {
                "description": "Update the designated team\n\nThis API may be called a maximum of 15 times per minute.\n",
                "parameters": [
                    {
                        "description": "Your API ID",
                        "in": "header",
                        "name": "X-VO-Api-Id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Your API Key",
                        "in": "header",
                        "name": "X-VO-Api-Key",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The VictorOps team to be updated",
                        "in": "path",
                        "name": "team",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Some details about the team that was added",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Some info about the team",
                                    "properties": {
                                        "_adminsUrl": {
                                            "type": "string"
                                        },
                                        "_membersUrl": {
                                            "type": "string"
                                        },
                                        "_policiesUrl": {
                                            "type": "string"
                                        },
                                        "_selfUrl": {
                                            "type": "string"
                                        },
                                        "isDefaultTeam": {
                                            "type": "boolean"
                                        },
                                        "memberCount": {
                                            "type": "number"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "slug": {
                                            "type": "string"
                                        },
                                        "version": {
                                            "type": "number"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Problem with the request arguments.  The response payload may include an error message."
                    },
                    "401": {
                        "description": "Authentication parameters missing"
                    },
                    "403": {
                        "description": "Authentication failed or rate-limit reached"
                    },
                    "404": {
                        "description": "Team not found"
                    },
                    "422": {
                        "description": "Team name or email is unavailable, or you have reached your team limit.\n"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Update a team",
                "tags": [
                    "Teams"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "The team information",
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "name"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "description": "The team information",
                    "required": true
                }
            }
        },
        "/api-public/v1/team/{team}/admins": {
            "get": {
                "description": "Get the team admins for the specified team.\n\nThis API may be called a maximum of 30 times per minute.\n",
                "parameters": [
                    {
                        "description": "Your API ID",
                        "in": "header",
                        "name": "X-VO-Api-Id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Your API Key",
                        "in": "header",
                        "name": "X-VO-Api-Key",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The VictorOps team",
                        "in": "path",
                        "name": "team",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Some details about the team that was added",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "A list of team admins for the team",
                                    "properties": {
                                        "teamAdmins": {
                                            "items": {
                                                "description": "Some info about the user",
                                                "properties": {
                                                    "_selfUrl": {
                                                        "type": "string"
                                                    },
                                                    "firstName": {
                                                        "type": "string"
                                                    },
                                                    "lastName": {
                                                        "type": "string"
                                                    },
                                                    "username": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Problem with the request arguments.  The response payload may include an error message."
                    },
                    "401": {
                        "description": "Authentication parameters missing"
                    },
                    "403": {
                        "description": "Authentication failed or rate-limit reached"
                    },
                    "404": {
                        "description": "Team not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Retrieve a list of team admins for a team",
                "tags": [
                    "Teams"
                ]
            }
        },
        "/api-public/v1/team/{team}/members": {
            "get": {
                "description": "Get the members for the specified team.\n\nThis API may be called a maximum of 15 times per minute.\n",
                "parameters": [
                    {
                        "description": "Your API ID",
                        "in": "header",
                        "name": "X-VO-Api-Id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Your API Key",
                        "in": "header",
                        "name": "X-VO-Api-Key",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The VictorOps team to fetch",
                        "in": "path",
                        "name": "team",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Some details about the team that was added",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "A list of members for the team",
                                    "properties": {
                                        "_selfUrl": {
                                            "type": "string"
                                        },
                                        "_teamUrl": {
                                            "type": "string"
                                        },
                                        "members": {
                                            "items": {
                                                "description": "Some info about the user",
                                                "properties": {
                                                    "firstName": {
                                                        "type": "string"
                                                    },
                                                    "lastName": {
                                                        "type": "string"
                                                    },
                                                    "username": {
                                                        "type": "string"
                                                    },
                                                    "verified": {
                                                        "description": "Whether or not this user has set their password (will always be false)",
                                                        "type": "string"
                                                    },
                                                    "version": {
                                                        "type": "number"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Problem with the request arguments.  The response payload may include an error message."
                    },
                    "401": {
                        "description": "Authentication parameters missing"
                    },
                    "403": {
                        "description": "Authentication failed or rate-limit reached"
                    },
                    "404": {
                        "description": "Team not found"
                    },
                    "422": {
                        "description": "Team name or email is unavailable, or you have reached your team limit.\n"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Retrieve a list of members for a team",
                "tags": [
                    "Teams"
                ]
            },
            "post": {
                "description": "Add a team member to your team.\n\nThis API may be called a maximum of 15 times per minute.\n",
                "parameters": [
                    {
                        "description": "Your API ID",
                        "in": "header",
                        "name": "X-VO-Api-Id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Your API Key",
                        "in": "header",
                        "name": "X-VO-Api-Key",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The VictorOps team to fetch",
                        "in": "path",
                        "name": "team",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Some details about the team that was added",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "A list of members for the team",
                                    "properties": {
                                        "_selfUrl": {
                                            "type": "string"
                                        },
                                        "_teamUrl": {
                                            "type": "string"
                                        },
                                        "members": {
                                            "items": {
                                                "description": "Some info about the user",
                                                "properties": {
                                                    "firstName": {
                                                        "type": "string"
                                                    },
                                                    "lastName": {
                                                        "type": "string"
                                                    },
                                                    "username": {
                                                        "type": "string"
                                                    },
                                                    "verified": {
                                                        "description": "Whether or not this user has set their password (will always be false)",
                                                        "type": "string"
                                                    },
                                                    "version": {
                                                        "type": "number"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Problem with the request arguments.  The response payload may include an error message."
                    },
                    "401": {
                        "description": "Authentication parameters missing"
                    },
                    "403": {
                        "description": "Authentication failed or rate-limit reached"
                    },
                    "404": {
                        "description": "Team not found"
                    },
                    "422": {
                        "description": "Team name or email is unavailable, or you have reached your team limit.\n"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Add a team member",
                "tags": [
                    "Teams"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "The user information",
                                "properties": {
                                    "username": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "username"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/api-public/v1/team/{team}/members/{user}": {
            "delete": {
                "description": "Remove a team from your organization.\n\nThis API may be called a maximum of 15 times per minute.\n",
                "parameters": [
                    {
                        "description": "Your API ID",
                        "in": "header",
                        "name": "X-VO-Api-Id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Your API Key",
                        "in": "header",
                        "name": "X-VO-Api-Key",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The VictorOps team to be deleted",
                        "in": "path",
                        "name": "team",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The team member username",
                        "in": "path",
                        "name": "user",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Team was deleted"
                    },
                    "400": {
                        "description": "Problem with the request arguments.  The response payload may include an error message."
                    },
                    "401": {
                        "description": "Authentication parameters missing"
                    },
                    "403": {
                        "description": "Authentication failed or rate-limit reached"
                    },
                    "404": {
                        "description": "Team not found"
                    },
                    "422": {
                        "description": "There was a problem with the delete such as the replacement team member was not found.\n"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Remove a team member",
                "tags": [
                    "Teams"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "The user information",
                                "properties": {
                                    "replacement": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "replacement"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "description": "The user information",
                    "required": true
                }
            }
        },
        "/api-public/v1/team/{team}/oncall/schedule": {
            "get": {
                "deprecated": true,
                "description": "__NOTE: This call is deprecated. Please use `GET /api-public/v2/team/{team}/oncall/schedule`.__\n\nGet the on-call schedule for a team, including on-call overrides.\n\nThis API may be called a maximum of 15 times per minute.\n",
                "parameters": [
                    {
                        "description": "Your API ID",
                        "in": "header",
                        "name": "X-VO-Api-Id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Your API Key",
                        "in": "header",
                        "name": "X-VO-Api-Key",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The VictorOps team 'slug'",
                        "in": "path",
                        "name": "team",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Days to include in returned schedule (30 max)",
                        "in": "query",
                        "name": "daysForward",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "minimum": 0,
                            "maximum": 30,
                            "default": 14
                        }
                    },
                    {
                        "description": "Days to skip before computing schedule to return (90 max)",
                        "in": "query",
                        "name": "daysSkip",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "minimum": 0,
                            "maximum": 90,
                            "default": 0
                        }
                    },
                    {
                        "description": "Step of escalation policy (3 max)",
                        "in": "query",
                        "name": "step",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "minimum": 0,
                            "maximum": 3,
                            "default": 0
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The on-call schedule for the team",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "overrides": {
                                            "items": {
                                                "properties": {
                                                    "end": {
                                                        "description": "The time the override is scheduled to end",
                                                        "type": "number"
                                                    },
                                                    "orig": {
                                                        "description": "The user scheduled on call (if any)",
                                                        "type": "string"
                                                    },
                                                    "over": {
                                                        "description": "The user overriding the scheduled on call user (if any)",
                                                        "type": "string"
                                                    },
                                                    "start": {
                                                        "description": "The time the override is scheduled to start",
                                                        "type": "number"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "schedule": {
                                            "items": {
                                                "properties": {
                                                    "oncall": {
                                                        "description": "The user scheduled on call (if any)",
                                                        "type": "string"
                                                    },
                                                    "overrideoncall": {
                                                        "description": "The user overriding the scheduled on call user (if any)",
                                                        "type": "string"
                                                    },
                                                    "policyType": {
                                                        "type": "string"
                                                    },
                                                    "rolls": {
                                                        "items": {
                                                            "properties": {
                                                                "change": {
                                                                    "description": "The time the period is scheduled to start",
                                                                    "type": "number"
                                                                },
                                                                "isRoll": {
                                                                    "type": "boolean"
                                                                },
                                                                "oncall": {
                                                                    "description": "The user scheduled on call (if any)",
                                                                    "type": "string"
                                                                },
                                                                "until": {
                                                                    "description": "The time the period is scheduled to end",
                                                                    "type": "number"
                                                                }
                                                            },
                                                            "required": [
                                                                "change",
                                                                "until",
                                                                "isRoll"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "rotationName": {
                                                        "type": "string"
                                                    },
                                                    "shiftName": {
                                                        "type": "string"
                                                    },
                                                    "shiftRoll": {
                                                        "type": "number"
                                                    }
                                                },
                                                "required": [
                                                    "policyType",
                                                    "rolls"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "team": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Problem with the request arguments.  The response payload may include an error message."
                    },
                    "401": {
                        "description": "Authentication parameters missing"
                    },
                    "403": {
                        "description": "Authentication failed or rate-limit reached"
                    },
                    "404": {
                        "description": "Team not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Get a team's on-call schedule",
                "tags": [
                    "On-call"
                ]
            }
        },
        "/api-public/v1/team/{team}/oncall/user": {
            "patch": {
                "deprecated": true,
                "description": "__NOTE: This API call is deprecated. Please use `PATCH /api-public/v2/policies/{policy}/oncall/user`__\n\nReplaces a currently on-call user on the team with another.\n\nThis API may be called a maximum of 6 times per minute.\n",
                "parameters": [
                    {
                        "description": "Your API ID",
                        "in": "header",
                        "name": "X-VO-Api-Id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Your API Key",
                        "in": "header",
                        "name": "X-VO-Api-Key",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The VictorOps team 'slug'",
                        "in": "path",
                        "name": "team",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The result of the take request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "result": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Problem with the request arguments.  The response payload may include an error message."
                    },
                    "401": {
                        "description": "Authentication parameters missing"
                    },
                    "403": {
                        "description": "Authentication failed or rate-limit reached"
                    },
                    "404": {
                        "description": "Team or user(s) not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Create an on-call override (take on-call)",
                "tags": [
                    "On-call"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "fromUser": {
                                        "type": "string"
                                    },
                                    "toUser": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "fromUser",
                                    "toUser"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "description": "The take on-call payload",
                    "required": true
                }
            }
        },
        "/api-public/v1/team/{team}/policies": {
            "get": {
                "description": "Get the escalation policies for the specified team.\n\nThis API may be called a maximum of 15 times per minute.\n",
                "parameters": [
                    {
                        "description": "Your API ID",
                        "in": "header",
                        "name": "X-VO-Api-Id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Your API Key",
                        "in": "header",
                        "name": "X-VO-Api-Key",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The VictorOps team to fetch",
                        "in": "path",
                        "name": "team",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The escalation policy list. This does not include details about the actual notification steps of the policy.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "policies": {
                                            "items": {
                                                "properties": {
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "slug": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Problem with the request arguments.  The response payload may include an error message."
                    },
                    "401": {
                        "description": "Authentication parameters missing"
                    },
                    "403": {
                        "description": "Authentication failed or rate-limit reached"
                    },
                    "404": {
                        "description": "Team not found"
                    },
                    "422": {
                        "description": "Team name or email is unavailable, or you have reached your team limit.\n"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Retrieve a list of escalation policies for a team",
                "tags": [
                    "Escalation Policies",
                    "Teams"
                ]
            }
        },
        "/api-public/v1/user": {
            "get": {
                "description": "Get a list of users for your organization\n\nThis API may be called a maximum of 15 times per minute.\n",
                "parameters": [
                    {
                        "description": "Your API ID",
                        "in": "header",
                        "name": "X-VO-Api-Id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Your API Key",
                        "in": "header",
                        "name": "X-VO-Api-Key",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of users for your organization",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Some info about the user",
                                    "properties": {
                                        "_selfUrl": {
                                            "type": "string"
                                        },
                                        "users": {
                                            "items": {
                                                "description": "Some info about the user",
                                                "properties": {
                                                    "_selfUrl": {
                                                        "type": "string"
                                                    },
                                                    "createdAt": {
                                                        "type": "string"
                                                    },
                                                    "email": {
                                                        "type": "string"
                                                    },
                                                    "firstName": {
                                                        "type": "string"
                                                    },
                                                    "lastName": {
                                                        "type": "string"
                                                    },
                                                    "passwordLastUpdated": {
                                                        "type": "string"
                                                    },
                                                    "username": {
                                                        "type": "string"
                                                    },
                                                    "verified": {
                                                        "description": "Whether or not this user has set their password (will always be false)",
                                                        "type": "boolean"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Problem with the request arguments.  The response payload may include an error message."
                    },
                    "401": {
                        "description": "Authentication parameters missing"
                    },
                    "403": {
                        "description": "Authentication failed or rate-limit reached"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "422": {
                        "description": "You have reached your user limit.\n"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "List users",
                "tags": [
                    "Users"
                ]
            },
            "post": {
                "description": "Add a user to your organization\n\nThis API may be called a maximum of 15 times per minute.\n",
                "parameters": [
                    {
                        "description": "Your API ID",
                        "in": "header",
                        "name": "X-VO-Api-Id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Your API Key",
                        "in": "header",
                        "name": "X-VO-Api-Key",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Some details about the user that was added",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Some info about the user",
                                    "properties": {
                                        "_selfUrl": {
                                            "type": "string"
                                        },
                                        "createdAt": {
                                            "type": "string"
                                        },
                                        "email": {
                                            "type": "string"
                                        },
                                        "firstName": {
                                            "type": "string"
                                        },
                                        "lastName": {
                                            "type": "string"
                                        },
                                        "passwordLastUpdated": {
                                            "type": "string"
                                        },
                                        "username": {
                                            "type": "string"
                                        },
                                        "verified": {
                                            "description": "Whether or not this user has set their password (will always be false)",
                                            "type": "boolean"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Problem with the request arguments.  The response payload may include an error message."
                    },
                    "401": {
                        "description": "Authentication parameters missing"
                    },
                    "403": {
                        "description": "Authentication failed or rate-limit reached"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "422": {
                        "description": "Username or email is unavailable, or you have reached your user limit.\n"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Add a user",
                "tags": [
                    "Users"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "The user information",
                                "properties": {
                                    "admin": {
                                        "type": "boolean"
                                    },
                                    "email": {
                                        "format": "email",
                                        "type": "string"
                                    },
                                    "expirationHours": {
                                        "default": 24,
                                        "description": "The validity duration for the invitatation/set password link sent to the added user.",
                                        "type": "number"
                                    },
                                    "firstName": {
                                        "type": "string"
                                    },
                                    "lastName": {
                                        "type": "string"
                                    },
                                    "username": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "firstName",
                                    "lastName",
                                    "username",
                                    "email"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/api-public/v1/user/{user}": {
            "delete": {
                "description": "Remove a user from your organization. If no replacement is specified, an empty JSON payload (\"{}\") is still required.\n\nThis API may be called a maximum of 15 times per minute.\n",
                "parameters": [
                    {
                        "description": "Your API ID",
                        "in": "header",
                        "name": "X-VO-Api-Id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Your API Key",
                        "in": "header",
                        "name": "X-VO-Api-Key",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The VictorOps user to be deleted",
                        "in": "path",
                        "name": "user",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User was deleted"
                    },
                    "400": {
                        "description": "Problem with the request arguments.  The response payload may include an error message."
                    },
                    "401": {
                        "description": "Authentication parameters missing"
                    },
                    "403": {
                        "description": "Authentication failed or rate-limit reached"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "422": {
                        "description": "There was a problem with the delete such as a replacement is required or the replacement user was not found.\n"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Remove a user",
                "tags": [
                    "Users"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "The information about what to do with the deleted user",
                                "properties": {
                                    "replacement": {
                                        "description": "The user to take the place of the deleted user in escalations",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            },
            "get": {
                "description": "Get the information for the specified user\n\nThis API may be called a maximum of 15 times per minute.\n",
                "parameters": [
                    {
                        "description": "Your API ID",
                        "in": "header",
                        "name": "X-VO-Api-Id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Your API Key",
                        "in": "header",
                        "name": "X-VO-Api-Key",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The VictorOps user to fetch",
                        "in": "path",
                        "name": "user",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Some details about the user that was added",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Some info about the user",
                                    "properties": {
                                        "_selfUrl": {
                                            "type": "string"
                                        },
                                        "createdAt": {
                                            "type": "string"
                                        },
                                        "email": {
                                            "type": "string"
                                        },
                                        "firstName": {
                                            "type": "string"
                                        },
                                        "lastName": {
                                            "type": "string"
                                        },
                                        "passwordLastUpdated": {
                                            "type": "string"
                                        },
                                        "username": {
                                            "type": "string"
                                        },
                                        "verified": {
                                            "description": "Whether or not this user has set their password (will always be false)",
                                            "type": "boolean"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Problem with the request arguments.  The response payload may include an error message."
                    },
                    "401": {
                        "description": "Authentication parameters missing"
                    },
                    "403": {
                        "description": "Authentication failed or rate-limit reached"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "422": {
                        "description": "Username or email is unavailable, or you have reached your user limit.\n"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Retrieve information for a user",
                "tags": [
                    "Users"
                ]
            },
            "put": {
                "description": "Update the designated user\n\nThis API may be called a maximum of 15 times per minute.\n",
                "parameters": [
                    {
                        "description": "Your API ID",
                        "in": "header",
                        "name": "X-VO-Api-Id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Your API Key",
                        "in": "header",
                        "name": "X-VO-Api-Key",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The VictorOps user to be updated",
                        "in": "path",
                        "name": "user",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Some details about the user that was added",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Some info about the user",
                                    "properties": {
                                        "_selfUrl": {
                                            "type": "string"
                                        },
                                        "createdAt": {
                                            "type": "string"
                                        },
                                        "email": {
                                            "type": "string"
                                        },
                                        "firstName": {
                                            "type": "string"
                                        },
                                        "lastName": {
                                            "type": "string"
                                        },
                                        "passwordLastUpdated": {
                                            "type": "string"
                                        },
                                        "username": {
                                            "type": "string"
                                        },
                                        "verified": {
                                            "description": "Whether or not this user has set their password (will always be false)",
                                            "type": "boolean"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Problem with the request arguments.  The response payload may include an error message."
                    },
                    "401": {
                        "description": "Authentication parameters missing"
                    },
                    "403": {
                        "description": "Authentication failed or rate-limit reached"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "422": {
                        "description": "Username or email is unavailable, or you have reached your user limit.\n"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Update a user",
                "tags": [
                    "Users"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "The user information",
                                "properties": {
                                    "admin": {
                                        "type": "boolean"
                                    },
                                    "email": {
                                        "format": "email",
                                        "type": "string"
                                    },
                                    "expirationHours": {
                                        "default": 24,
                                        "description": "The validity duration for the invitatation/set password link sent to the added user.",
                                        "type": "number"
                                    },
                                    "firstName": {
                                        "type": "string"
                                    },
                                    "lastName": {
                                        "type": "string"
                                    },
                                    "username": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "firstName",
                                    "lastName",
                                    "username",
                                    "email"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/api-public/v1/user/{user}/contact-methods": {
            "get": {
                "description": "Get the contact methods for a user\n\nThis API may be called a maximum of 15 times per minute.\n",
                "parameters": [
                    {
                        "description": "Your API ID",
                        "in": "header",
                        "name": "X-VO-Api-Id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Your API Key",
                        "in": "header",
                        "name": "X-VO-Api-Key",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The VictorOps user ID",
                        "in": "path",
                        "name": "user",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "All available contact methods for the user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "devices": {
                                            "items": {
                                                "properties": {
                                                    "_selfUrl": {
                                                        "type": "string"
                                                    },
                                                    "deviceType": {
                                                        "type": "string"
                                                    },
                                                    "extId": {
                                                        "type": "string"
                                                    },
                                                    "label": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "emails": {
                                            "items": {
                                                "properties": {
                                                    "_selfUrl": {
                                                        "type": "string"
                                                    },
                                                    "deviceType": {
                                                        "type": "string"
                                                    },
                                                    "extId": {
                                                        "type": "string"
                                                    },
                                                    "label": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "phones": {
                                            "items": {
                                                "properties": {
                                                    "_selfUrl": {
                                                        "type": "string"
                                                    },
                                                    "deviceType": {
                                                        "type": "string"
                                                    },
                                                    "extId": {
                                                        "type": "string"
                                                    },
                                                    "label": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Problem with the request arguments.  The response payload may include an error message."
                    },
                    "401": {
                        "description": "Authentication parameters missing"
                    },
                    "403": {
                        "description": "Authentication failed or rate-limit reached"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Get a list of all contact methods for a user",
                "tags": [
                    "User Contact Methods"
                ]
            }
        },
        "/api-public/v1/user/{user}/contact-methods/devices": {
            "get": {
                "description": "Get the contact methods for a user\n\nThis API may be called a maximum of 15 times per minute.\n",
                "parameters": [
                    {
                        "description": "Your API ID",
                        "in": "header",
                        "name": "X-VO-Api-Id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Your API Key",
                        "in": "header",
                        "name": "X-VO-Api-Key",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The VictorOps user ID",
                        "in": "path",
                        "name": "user",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The list of contact devices for the user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "properties": {
                                            "_selfUrl": {
                                                "type": "string"
                                            },
                                            "deviceType": {
                                                "type": "string"
                                            },
                                            "extId": {
                                                "type": "string"
                                            },
                                            "label": {
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication parameters missing"
                    },
                    "403": {
                        "description": "Authentication failed or rate-limit reached"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Get a list of all contact devices for a user",
                "tags": [
                    "User Contact Methods"
                ]
            }
        },
        "/api-public/v1/user/{user}/contact-methods/devices/{contactId}": {
            "delete": {
                "description": "Delete a contact device for a user\n\nThis API may be called a maximum of 15 times per minute.\n",
                "parameters": [
                    {
                        "description": "Your API ID",
                        "in": "header",
                        "name": "X-VO-Api-Id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Your API Key",
                        "in": "header",
                        "name": "X-VO-Api-Key",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The VictorOps user ID",
                        "in": "path",
                        "name": "user",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The unique contact identifier",
                        "in": "path",
                        "name": "contactId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Deleted contact device for the user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "_selfUrl": {
                                            "type": "string"
                                        },
                                        "deviceType": {
                                            "type": "string"
                                        },
                                        "extId": {
                                            "type": "string"
                                        },
                                        "label": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Problem with the request arguments.  The response payload may include an error message."
                    },
                    "401": {
                        "description": "Authentication parameters missing"
                    },
                    "403": {
                        "description": "Authentication failed or rate-limit reached"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Delete a contact device for a user",
                "tags": [
                    "User Contact Methods"
                ]
            },
            "get": {
                "description": "Get the indicated contact device for a user\n\nThis API may be called a maximum of 15 times per minute.\n",
                "parameters": [
                    {
                        "description": "Your API ID",
                        "in": "header",
                        "name": "X-VO-Api-Id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Your API Key",
                        "in": "header",
                        "name": "X-VO-Api-Key",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The VictorOps user ID",
                        "in": "path",
                        "name": "user",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The unique contact identifier",
                        "in": "path",
                        "name": "contactId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The list of contact devices for the user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "properties": {
                                            "_selfUrl": {
                                                "type": "string"
                                            },
                                            "deviceType": {
                                                "type": "string"
                                            },
                                            "extId": {
                                                "type": "string"
                                            },
                                            "label": {
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication parameters missing"
                    },
                    "403": {
                        "description": "Authentication failed or rate-limit reached"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Get the indicated contact device for a user",
                "tags": [
                    "User Contact Methods"
                ]
            },
            "put": {
                "description": "Update a contact device for a user\n\nThis API may be called a maximum of 15 times per minute.\n",
                "parameters": [
                    {
                        "description": "Your API ID",
                        "in": "header",
                        "name": "X-VO-Api-Id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Your API Key",
                        "in": "header",
                        "name": "X-VO-Api-Key",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The VictorOps user ID",
                        "in": "path",
                        "name": "user",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The unique contact identifier",
                        "in": "path",
                        "name": "contactId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The list of contact devices for the user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "_selfUrl": {
                                            "type": "string"
                                        },
                                        "deviceType": {
                                            "type": "string"
                                        },
                                        "extId": {
                                            "type": "string"
                                        },
                                        "label": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Problem with the request arguments.  The response payload may include an error message."
                    },
                    "401": {
                        "description": "Authentication parameters missing"
                    },
                    "403": {
                        "description": "Authentication failed or rate-limit reached"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Update a contact device for a user",
                "tags": [
                    "User Contact Methods"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "The contact device",
                                "properties": {
                                    "chat_escalation_sound": {
                                        "type": "string"
                                    },
                                    "device_label": {
                                        "type": "string"
                                    },
                                    "escalation_notification_sound": {
                                        "type": "string"
                                    },
                                    "resolved_notification_sound": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "description": "The contact device",
                    "required": true
                }
            }
        },
        "/api-public/v1/user/{user}/contact-methods/emails": {
            "get": {
                "description": "Get the contact emails for a user\n\nThis API may be called a maximum of 15 times per minute.\n",
                "parameters": [
                    {
                        "description": "Your API ID",
                        "in": "header",
                        "name": "X-VO-Api-Id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Your API Key",
                        "in": "header",
                        "name": "X-VO-Api-Key",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The VictorOps user ID",
                        "in": "path",
                        "name": "user",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The list of contact emails for the user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "properties": {
                                            "_selfUrl": {
                                                "type": "string"
                                            },
                                            "deviceType": {
                                                "type": "string"
                                            },
                                            "extId": {
                                                "type": "string"
                                            },
                                            "label": {
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication parameters missing"
                    },
                    "403": {
                        "description": "Authentication failed or rate-limit reached"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Get a list of all contact emails for a user",
                "tags": [
                    "User Contact Methods"
                ]
            },
            "post": {
                "description": "Create a contact email for a user\n\nThis API may be called a maximum of 15 times per minute.\n",
                "parameters": [
                    {
                        "description": "Your API ID",
                        "in": "header",
                        "name": "X-VO-Api-Id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Your API Key",
                        "in": "header",
                        "name": "X-VO-Api-Key",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The VictorOps user ID",
                        "in": "path",
                        "name": "user",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The list of contact emails for the user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "_selfUrl": {
                                            "type": "string"
                                        },
                                        "deviceType": {
                                            "type": "string"
                                        },
                                        "extId": {
                                            "type": "string"
                                        },
                                        "label": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Problem with the request arguments.  The response payload may include an error message."
                    },
                    "401": {
                        "description": "Authentication parameters missing"
                    },
                    "403": {
                        "description": "Authentication failed or rate-limit reached"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Create a contact emails for a user",
                "tags": [
                    "User Contact Methods"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "The contact email",
                                "properties": {
                                    "email": {
                                        "format": "email",
                                        "type": "string"
                                    },
                                    "label": {
                                        "type": "string"
                                    },
                                    "rank": {
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "label",
                                    "email"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "description": "The contact email",
                    "required": true
                }
            }
        },
        "/api-public/v1/user/{user}/contact-methods/emails/{contactId}": {
            "delete": {
                "description": "Delete the indicated contact email for the user\n\nThis API may be called a maximum of 15 times per minute.\n",
                "parameters": [
                    {
                        "description": "Your API ID",
                        "in": "header",
                        "name": "X-VO-Api-Id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Your API Key",
                        "in": "header",
                        "name": "X-VO-Api-Key",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The VictorOps user ID",
                        "in": "path",
                        "name": "user",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The unique contact identifier",
                        "in": "path",
                        "name": "contactId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Deleted contact email for the user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "_selfUrl": {
                                            "type": "string"
                                        },
                                        "deviceType": {
                                            "type": "string"
                                        },
                                        "extId": {
                                            "type": "string"
                                        },
                                        "label": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Problem with the request arguments.  The response payload may include an error message."
                    },
                    "401": {
                        "description": "Authentication parameters missing"
                    },
                    "403": {
                        "description": "Authentication failed or rate-limit reached"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Delete a contact email for a user",
                "tags": [
                    "User Contact Methods"
                ]
            },
            "get": {
                "description": "Get the indicated contact email for a user\n\nThis API may be called a maximum of 15 times per minute.\n",
                "parameters": [
                    {
                        "description": "Your API ID",
                        "in": "header",
                        "name": "X-VO-Api-Id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Your API Key",
                        "in": "header",
                        "name": "X-VO-Api-Key",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The VictorOps user ID",
                        "in": "path",
                        "name": "user",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The unique contact identifier",
                        "in": "path",
                        "name": "contactId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The indicated contact email for the user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "properties": {
                                            "_selfUrl": {
                                                "type": "string"
                                            },
                                            "deviceType": {
                                                "type": "string"
                                            },
                                            "extId": {
                                                "type": "string"
                                            },
                                            "label": {
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication parameters missing"
                    },
                    "403": {
                        "description": "Authentication failed or rate-limit reached"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Get the indicated contact email for a user",
                "tags": [
                    "User Contact Methods"
                ]
            }
        },
        "/api-public/v1/user/{user}/contact-methods/phones": {
            "get": {
                "description": "Get the contact phones for a user\n\nThis API may be called a maximum of 15 times per minute.\n",
                "parameters": [
                    {
                        "description": "Your API ID",
                        "in": "header",
                        "name": "X-VO-Api-Id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Your API Key",
                        "in": "header",
                        "name": "X-VO-Api-Key",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The VictorOps user ID",
                        "in": "path",
                        "name": "user",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The list of contact phones for the user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "properties": {
                                            "_selfUrl": {
                                                "type": "string"
                                            },
                                            "deviceType": {
                                                "type": "string"
                                            },
                                            "extId": {
                                                "type": "string"
                                            },
                                            "label": {
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication parameters missing"
                    },
                    "403": {
                        "description": "Authentication failed or rate-limit reached"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Get a list of all contact phones for a user",
                "tags": [
                    "User Contact Methods"
                ]
            },
            "post": {
                "description": "Create a contact phone for a user\n\nThis API may be called a maximum of 15 times per minute.\n",
                "parameters": [
                    {
                        "description": "Your API ID",
                        "in": "header",
                        "name": "X-VO-Api-Id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Your API Key",
                        "in": "header",
                        "name": "X-VO-Api-Key",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The VictorOps user ID",
                        "in": "path",
                        "name": "user",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The list of contact phones for the user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "_selfUrl": {
                                            "type": "string"
                                        },
                                        "deviceType": {
                                            "type": "string"
                                        },
                                        "extId": {
                                            "type": "string"
                                        },
                                        "label": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Problem with the request arguments.  The response payload may include an error message."
                    },
                    "401": {
                        "description": "Authentication parameters missing"
                    },
                    "403": {
                        "description": "Authentication failed or rate-limit reached"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Create a contact phones for a user",
                "tags": [
                    "User Contact Methods"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "The contact phone",
                                "properties": {
                                    "label": {
                                        "type": "string"
                                    },
                                    "phone": {
                                        "type": "string"
                                    },
                                    "rank": {
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "label",
                                    "phone"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "description": "The contact phone",
                    "required": true
                }
            }
        },
        "/api-public/v1/user/{user}/contact-methods/phones/{contactId}": {
            "delete": {
                "description": "Delete the indicated contact phone for the user\n\nThis API may be called a maximum of 15 times per minute.\n",
                "parameters": [
                    {
                        "description": "Your API ID",
                        "in": "header",
                        "name": "X-VO-Api-Id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Your API Key",
                        "in": "header",
                        "name": "X-VO-Api-Key",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The VictorOps user ID",
                        "in": "path",
                        "name": "user",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The unique contact identifier",
                        "in": "path",
                        "name": "contactId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Deleted contact phone for the user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "_selfUrl": {
                                            "type": "string"
                                        },
                                        "deviceType": {
                                            "type": "string"
                                        },
                                        "extId": {
                                            "type": "string"
                                        },
                                        "label": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Problem with the request arguments.  The response payload may include an error message."
                    },
                    "401": {
                        "description": "Authentication parameters missing"
                    },
                    "403": {
                        "description": "Authentication failed or rate-limit reached"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Delete a contact phone for a user",
                "tags": [
                    "User Contact Methods"
                ]
            },
            "get": {
                "description": "Get the indicated contact phone for a user\n\nThis API may be called a maximum of 15 times per minute.\n",
                "parameters": [
                    {
                        "description": "Your API ID",
                        "in": "header",
                        "name": "X-VO-Api-Id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Your API Key",
                        "in": "header",
                        "name": "X-VO-Api-Key",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The VictorOps user ID",
                        "in": "path",
                        "name": "user",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The unique contact identifier",
                        "in": "path",
                        "name": "contactId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The indicated contact phone for the user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "properties": {
                                            "_selfUrl": {
                                                "type": "string"
                                            },
                                            "deviceType": {
                                                "type": "string"
                                            },
                                            "extId": {
                                                "type": "string"
                                            },
                                            "label": {
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication parameters missing"
                    },
                    "403": {
                        "description": "Authentication failed or rate-limit reached"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Get the indicated contact phone for a user",
                "tags": [
                    "User Contact Methods"
                ]
            }
        },
        "/api-public/v1/user/{user}/oncall/schedule": {
            "get": {
                "deprecated": true,
                "description": "__NOTE: This call is deprecated. Please use `GET /api-public/v2/user/{user}/oncall/schedule`.__\n\nGet the on-call schedule for a user for all teams, including on-call overrides.\n\nThis API may be called a maximum of 15 times per minute.\n",
                "parameters": [
                    {
                        "description": "Your API ID",
                        "in": "header",
                        "name": "X-VO-Api-Id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Your API Key",
                        "in": "header",
                        "name": "X-VO-Api-Key",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The VictorOps user ID",
                        "in": "path",
                        "name": "user",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Days to include in returned schedule (30 max)",
                        "in": "query",
                        "name": "daysForward",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "minimum": 0,
                            "maximum": 30,
                            "default": 14
                        }
                    },
                    {
                        "description": "Days to skip before computing schedule to return (90 max)",
                        "in": "query",
                        "name": "daysSkip",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "minimum": 0,
                            "maximum": 90,
                            "default": 0
                        }
                    },
                    {
                        "description": "Step of escalation policy (3 max)",
                        "in": "query",
                        "name": "step",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "minimum": 0,
                            "maximum": 3,
                            "default": 0
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The on-call schedule for the user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "properties": {
                                            "overrides": {
                                                "items": {
                                                    "properties": {
                                                        "end": {
                                                            "description": "The time the override is scheduled to end",
                                                            "type": "number"
                                                        },
                                                        "orig": {
                                                            "description": "The user scheduled on call (if any)",
                                                            "type": "string"
                                                        },
                                                        "over": {
                                                            "description": "The user overriding the scheduled on call user (if any)",
                                                            "type": "string"
                                                        },
                                                        "start": {
                                                            "description": "The time the override is scheduled to start",
                                                            "type": "number"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "type": "array"
                                            },
                                            "schedule": {
                                                "items": {
                                                    "properties": {
                                                        "oncall": {
                                                            "description": "The user scheduled on call (if any)",
                                                            "type": "string"
                                                        },
                                                        "overrideoncall": {
                                                            "description": "The user overriding the scheduled on call user (if any)",
                                                            "type": "string"
                                                        },
                                                        "policyType": {
                                                            "type": "string"
                                                        },
                                                        "rolls": {
                                                            "items": {
                                                                "properties": {
                                                                    "change": {
                                                                        "description": "The time the period is scheduled to start",
                                                                        "type": "number"
                                                                    },
                                                                    "isRoll": {
                                                                        "type": "boolean"
                                                                    },
                                                                    "oncall": {
                                                                        "description": "The user scheduled on call (if any)",
                                                                        "type": "string"
                                                                    },
                                                                    "until": {
                                                                        "description": "The time the period is scheduled to end",
                                                                        "type": "number"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "change",
                                                                    "until",
                                                                    "isRoll"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "rotationName": {
                                                            "type": "string"
                                                        },
                                                        "shiftName": {
                                                            "type": "string"
                                                        },
                                                        "shiftRoll": {
                                                            "type": "number"
                                                        }
                                                    },
                                                    "required": [
                                                        "policyType",
                                                        "rolls"
                                                    ],
                                                    "type": "object"
                                                },
                                                "type": "array"
                                            },
                                            "team": {
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Problem with the request arguments.  The response payload may include an error message."
                    },
                    "401": {
                        "description": "Authentication parameters missing"
                    },
                    "403": {
                        "description": "Authentication failed or rate-limit reached"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Get a user's on-call schedule",
                "tags": [
                    "On-call"
                ]
            }
        },
        "/api-public/v1/user/{user}/policies": {
            "get": {
                "description": "Get paging policies for a user\n\nThis API may be called a maximum of 15 times per minute.\n",
                "parameters": [
                    {
                        "description": "Your API ID",
                        "in": "header",
                        "name": "X-VO-Api-Id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Your API Key",
                        "in": "header",
                        "name": "X-VO-Api-Key",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The VictorOps user ID",
                        "in": "path",
                        "name": "user",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "All configured paging policies for a user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Paging policies accociated which this user",
                                    "properties": {
                                        "policies": {
                                            "items": {
                                                "description": "Paging policy fields",
                                                "properties": {
                                                    "contactType": {
                                                        "type": "string"
                                                    },
                                                    "extId": {
                                                        "type": "string"
                                                    },
                                                    "order": {
                                                        "type": "integer"
                                                    },
                                                    "timeout": {
                                                        "type": "integer"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "userId": {
                                            "type": "integer"
                                        },
                                        "username": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Problem with the request arguments.  The response payload may include an error message."
                    },
                    "401": {
                        "description": "Authentication parameters missing"
                    },
                    "403": {
                        "description": "Authentication failed or rate-limit reached"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Get a list of paging policies for a user",
                "tags": [
                    "User Paging Policies"
                ]
            }
        },
        "/api-public/v1/user/{user}/teams": {
            "get": {
                "description": "This API may be called a maximum of 30 times per minute.\n",
                "parameters": [
                    {
                        "description": "Your API ID",
                        "in": "header",
                        "name": "X-VO-Api-Id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Your API Key",
                        "in": "header",
                        "name": "X-VO-Api-Key",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The VictorOps user",
                        "in": "path",
                        "name": "user",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Team details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "A list of teams to which the user belongs",
                                    "properties": {
                                        "teams": {
                                            "items": {
                                                "description": "Some info about the team",
                                                "properties": {
                                                    "_adminsUrl": {
                                                        "type": "string"
                                                    },
                                                    "_membersUrl": {
                                                        "type": "string"
                                                    },
                                                    "_policiesUrl": {
                                                        "type": "string"
                                                    },
                                                    "_selfUrl": {
                                                        "type": "string"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "slug": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication parameters missing"
                    },
                    "403": {
                        "description": "Authentication failed or rate-limit reached"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Retrieve the user's team membership",
                "tags": [
                    "Users"
                ]
            }
        },
        "/api-public/v2/team/{team}/oncall/schedule": {
            "get": {
                "description": "Get the on-call schedule for a team, including on-call overrides.\n\nThis API may be called a maximum of 15 times per minute.\n",
                "parameters": [
                    {
                        "description": "Your API ID",
                        "in": "header",
                        "name": "X-VO-Api-Id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Your API Key",
                        "in": "header",
                        "name": "X-VO-Api-Key",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The VictorOps team 'slug'",
                        "in": "path",
                        "name": "team",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Days to include in returned schedule (30 max)",
                        "in": "query",
                        "name": "daysForward",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "minimum": 0,
                            "maximum": 30,
                            "default": 14
                        }
                    },
                    {
                        "description": "Days to skip before computing schedule to return (90 max)",
                        "in": "query",
                        "name": "daysSkip",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "minimum": 0,
                            "maximum": 90,
                            "default": 0
                        }
                    },
                    {
                        "description": "Step of escalation policy (3 max)",
                        "in": "query",
                        "name": "step",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "minimum": 0,
                            "maximum": 3,
                            "default": 0
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The on-call schedule for the team",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "schedules": {
                                            "items": {
                                                "properties": {
                                                    "overrides": {
                                                        "items": {
                                                            "properties": {
                                                                "end": {
                                                                    "description": "The override end time (ISO 8601)",
                                                                    "type": "string"
                                                                },
                                                                "origOnCallUser": {
                                                                    "properties": {
                                                                        "username": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "overrideOnCallUser": {
                                                                    "properties": {
                                                                        "username": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "start": {
                                                                    "description": "The override start time (ISO 8601)",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "policy": {
                                                        "properties": {
                                                            "name": {
                                                                "type": "string"
                                                            },
                                                            "slug": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "schedule": {
                                                        "items": {
                                                            "properties": {
                                                                "onCallType": {
                                                                    "enum": [
                                                                        "user",
                                                                        "rotation_group",
                                                                        "rotation_group_next",
                                                                        "rotation_group_previous",
                                                                        "team",
                                                                        "team_routing",
                                                                        "webhook",
                                                                        "email",
                                                                        "policy_routing"
                                                                    ],
                                                                    "type": "string"
                                                                },
                                                                "onCallUser": {
                                                                    "properties": {
                                                                        "username": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "overrideOnCallUser": {
                                                                    "properties": {
                                                                        "username": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "rolls": {
                                                                    "items": {
                                                                        "properties": {
                                                                            "end": {
                                                                                "description": "The on-call period end time (ISO 8601)",
                                                                                "type": "string"
                                                                            },
                                                                            "isRoll": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "onCallUser": {
                                                                                "properties": {
                                                                                    "username": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "start": {
                                                                                "description": "The on-call period start time (ISO 8601)",
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "start",
                                                                            "end",
                                                                            "isRoll"
                                                                        ],
                                                                        "type": "object"
                                                                    },
                                                                    "type": "array"
                                                                },
                                                                "rotationName": {
                                                                    "type": "string"
                                                                },
                                                                "shiftName": {
                                                                    "type": "string"
                                                                },
                                                                "shiftRoll": {
                                                                    "description": "The shift roll time (ISO 8601)",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "required": [
                                                                "onCallType",
                                                                "rolls"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "team": {
                                            "properties": {
                                                "name": {
                                                    "type": "string"
                                                },
                                                "slug": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Problem with the request arguments.  The response payload may include an error message."
                    },
                    "401": {
                        "description": "Authentication parameters missing"
                    },
                    "403": {
                        "description": "Authentication failed or rate-limit reached"
                    },
                    "404": {
                        "description": "Team not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Get a team's on-call schedule",
                "tags": [
                    "On-call"
                ]
            }
        },
        "/api-public/v2/user/{user}/oncall/schedule": {
            "get": {
                "description": "Get the on-call schedule for a user for all teams the user is on, including on-call overrides.\n\nThis API may be called a maximum of 15 times per minute.\n",
                "parameters": [
                    {
                        "description": "Your API ID",
                        "in": "header",
                        "name": "X-VO-Api-Id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Your API Key",
                        "in": "header",
                        "name": "X-VO-Api-Key",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The VictorOps user ID",
                        "in": "path",
                        "name": "user",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Days to include in returned schedule (30 max)",
                        "in": "query",
                        "name": "daysForward",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "minimum": 0,
                            "maximum": 30,
                            "default": 14
                        }
                    },
                    {
                        "description": "Days to skip before computing schedule to return (90 max)",
                        "in": "query",
                        "name": "daysSkip",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "minimum": 0,
                            "maximum": 90,
                            "default": 0
                        }
                    },
                    {
                        "description": "Step of escalation policy (3 max)",
                        "in": "query",
                        "name": "step",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "minimum": 0,
                            "maximum": 3,
                            "default": 0
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The on-call schedule for the user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "teamSchedules": {
                                            "items": {
                                                "properties": {
                                                    "schedules": {
                                                        "items": {
                                                            "properties": {
                                                                "overrides": {
                                                                    "items": {
                                                                        "properties": {
                                                                            "end": {
                                                                                "description": "The override end time (ISO 8601)",
                                                                                "type": "string"
                                                                            },
                                                                            "origOnCallUser": {
                                                                                "properties": {
                                                                                    "username": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "overrideOnCallUser": {
                                                                                "properties": {
                                                                                    "username": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "start": {
                                                                                "description": "The override start time (ISO 8601)",
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "type": "array"
                                                                },
                                                                "policy": {
                                                                    "properties": {
                                                                        "name": {
                                                                            "type": "string"
                                                                        },
                                                                        "slug": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "schedule": {
                                                                    "items": {
                                                                        "properties": {
                                                                            "onCallType": {
                                                                                "enum": [
                                                                                    "user",
                                                                                    "rotation_group",
                                                                                    "rotation_group_next",
                                                                                    "rotation_group_previous",
                                                                                    "team",
                                                                                    "team_routing",
                                                                                    "webhook",
                                                                                    "email",
                                                                                    "policy_routing"
                                                                                ],
                                                                                "type": "string"
                                                                            },
                                                                            "onCallUser": {
                                                                                "properties": {
                                                                                    "username": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "overrideOnCallUser": {
                                                                                "properties": {
                                                                                    "username": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "rolls": {
                                                                                "items": {
                                                                                    "properties": {
                                                                                        "end": {
                                                                                            "description": "The on-call period end time (ISO 8601)",
                                                                                            "type": "string"
                                                                                        },
                                                                                        "isRoll": {
                                                                                            "type": "boolean"
                                                                                        },
                                                                                        "onCallUser": {
                                                                                            "properties": {
                                                                                                "username": {
                                                                                                    "type": "string"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "start": {
                                                                                            "description": "The on-call period start time (ISO 8601)",
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "required": [
                                                                                        "start",
                                                                                        "end",
                                                                                        "isRoll"
                                                                                    ],
                                                                                    "type": "object"
                                                                                },
                                                                                "type": "array"
                                                                            },
                                                                            "rotationName": {
                                                                                "type": "string"
                                                                            },
                                                                            "shiftName": {
                                                                                "type": "string"
                                                                            },
                                                                            "shiftRoll": {
                                                                                "description": "The shift roll time (ISO 8601)",
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "onCallType",
                                                                            "rolls"
                                                                        ],
                                                                        "type": "object"
                                                                    },
                                                                    "type": "array"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "team": {
                                                        "properties": {
                                                            "name": {
                                                                "type": "string"
                                                            },
                                                            "slug": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Problem with the request arguments.  The response payload may include an error message."
                    },
                    "401": {
                        "description": "Authentication parameters missing"
                    },
                    "403": {
                        "description": "Authentication failed or rate-limit reached"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Get a user's on-call schedule",
                "tags": [
                    "On-call"
                ]
            }
        },
        "/api-reporting/v1/incidents": {
            "get": {
                "deprecated": true,
                "description": "\n__NOTE: This call is deprecated. Please use `GET /api-reporting/v2/incidents`.__\n\nRetrieve incident history for your company, searching over date ranges and with filtering options.  This is historical\ndata, and may be up to 15 minutes behind real-time incident data.  By default, only resolved incidents will be returned.\n\nThis API may be called a maximum of once a minute.\n\nIncident requests are paginated with a offset and limit query string parameters.\n  The query for incidents is run and offset records are skipped, after which limit records will be returned.\n\nThe default offset is 0 and the default limit is 20. The maximum value allowed for limit is 100.\n\nOn return, the total number of records available for that query will be returned in the payload as 'total'.\n",
                "parameters": [
                    {
                        "description": "Your API ID",
                        "in": "header",
                        "name": "X-VO-Api-Id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Your API Key",
                        "in": "header",
                        "name": "X-VO-Api-Key",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The offset within the set of matching incidents",
                        "in": "query",
                        "name": "offset",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "default": 0
                        }
                    },
                    {
                        "description": "The maximum number of matching incidents to return (100 max)",
                        "in": "query",
                        "name": "limit",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "maximum": 100,
                            "default": 20
                        }
                    },
                    {
                        "description": "The entity ID involved  This is the unique identifier for the entity causing the incident.",
                        "in": "query",
                        "name": "entityId",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The incident number as shown in VictorOps Multiple values and ranges are allowed: 4,5,20:50\n",
                        "in": "query",
                        "name": "incidentNumber",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Return incidents started after this timestamp Specify the timestamp in ISO8601 format",
                        "in": "query",
                        "name": "startedAfter",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Find incidents started before this timestamp  Specify the timestamp in ISO8601 format",
                        "in": "query",
                        "name": "startedBefore",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The host involved in the incident Multiple values can be separated with commas.",
                        "in": "query",
                        "name": "host",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The service involved in the incident (if any) Multiple values can be separated with commas.",
                        "in": "query",
                        "name": "service",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The current phase of the incident \"resolved\", \"triggered\" or \"acknowledged\". Multiple values can be separated with commas.",
                        "in": "query",
                        "name": "currentPhase",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The list of incidents matching the request filters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "description": "The results of an incident history request",
                                        "properties": {
                                            "incidents": {
                                                "description": "An array of incident objects matching the search",
                                                "items": {
                                                    "description": "Incidents contain the following fields (all should be considered optional)",
                                                    "properties": {
                                                        "ackTime": {
                                                            "description": "The time of the last acknowledgment of the incident",
                                                            "type": "string"
                                                        },
                                                        "ackUser": {
                                                            "description": "A JSON object with first/last name and email of the user that acknowledged the incident.",
                                                            "properties": {
                                                                "email": {
                                                                    "type": "string"
                                                                },
                                                                "first": {
                                                                    "type": "string"
                                                                },
                                                                "last": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "ackUserId": {
                                                            "description": "The VictorOps user id of the user that acknowledged the incident",
                                                            "type": "string"
                                                        },
                                                        "alertCount": {
                                                            "description": "The number of alerts received for this incident",
                                                            "type": "number"
                                                        },
                                                        "currentPhase": {
                                                            "description": "The current phase of the incident \"resolved\", \"triggered\" or \"acknowledged\".",
                                                            "type": "string"
                                                        },
                                                        "endTime": {
                                                            "description": "The time the incident ended",
                                                            "type": "string"
                                                        },
                                                        "entityDispName": {
                                                            "description": "The display name of the entity causing the incident",
                                                            "type": "string"
                                                        },
                                                        "entityId": {
                                                            "description": "The unique identification of the entity being monitored that caused the incident",
                                                            "type": "string"
                                                        },
                                                        "entityType": {
                                                            "description": "The type of entity causing the incident (host/service)",
                                                            "type": "string"
                                                        },
                                                        "host": {
                                                            "description": "The host on which the incident occurred",
                                                            "type": "string"
                                                        },
                                                        "incidentNumber": {
                                                            "description": "The VictorOps incident number",
                                                            "type": "string"
                                                        },
                                                        "lastAlertID": {
                                                            "description": "The unique id of the last alert for the incident",
                                                            "type": "string"
                                                        },
                                                        "lastAlertTime": {
                                                            "description": "The time of the last alert received for the incident",
                                                            "type": "string"
                                                        },
                                                        "service": {
                                                            "description": "The service name causing the incident (if any)",
                                                            "type": "string"
                                                        },
                                                        "startTime": {
                                                            "description": "The time the incident started",
                                                            "type": "string"
                                                        },
                                                        "teams": {
                                                            "description": "The teams that were paged for the incident (comma separated).",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "type": "array"
                                            },
                                            "limit": {
                                                "description": "The limit value passed in the request",
                                                "type": "number"
                                            },
                                            "offset": {
                                                "description": "The offset passed in the request",
                                                "type": "number"
                                            },
                                            "total": {
                                                "description": "The total number of incidents available for this search",
                                                "type": "number"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Problem with the request arguments.  The response payload may include an error message."
                    },
                    "401": {
                        "description": "Authentication parameters missing"
                    },
                    "403": {
                        "description": "Authentication failed or rate-limit reached"
                    },
                    "404": {
                        "description": "Path not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Get/search incident history",
                "tags": [
                    "Reporting"
                ]
            }
        },
        "/api-reporting/v1/team/{team}/oncall/log": {
            "get": {
                "description": "Returns a log of user shift changes for the specified team. This is historical\ndata, and may be up to 15 minutes behind real-time log data.\n\nThis API may be called a maximum of 6 times per minute.\n",
                "parameters": [
                    {
                        "description": "Your API ID",
                        "in": "header",
                        "name": "X-VO-Api-Id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Your API Key",
                        "in": "header",
                        "name": "X-VO-Api-Key",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The VictorOps team 'slug'",
                        "in": "path",
                        "name": "team",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Return shift changes occurring after this timestamp. The default is the start of the day at midnight. Specify the timestamp in ISO8601 format",
                        "in": "query",
                        "name": "start",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "description": "Return shift changes occurring before this timestamp. The default is the end of the day at 11:59:59. Specify the timestamp in ISO8601 format",
                        "in": "query",
                        "name": "end",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "description": "The VictorOps user ID. Return shift changes occurring during the interval specified for this user. Without this parameter, all relevant users (with respect to the specified interval) are returned",
                        "in": "query",
                        "name": "userName",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The result of the take request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "end": {
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "start": {
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "teamSlug": {
                                            "type": "string"
                                        },
                                        "userLogs": {
                                            "items": {
                                                "properties": {
                                                    "adjustedTotal": {
                                                        "properties": {
                                                            "hours": {
                                                                "type": "number"
                                                            },
                                                            "minutes": {
                                                                "type": "number"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "log": {
                                                        "items": {
                                                            "properties": {
                                                                "duration": {
                                                                    "properties": {
                                                                        "hours": {
                                                                            "type": "number"
                                                                        },
                                                                        "minutes": {
                                                                            "type": "number"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "escalationPolicy": {
                                                                    "properties": {
                                                                        "name": {
                                                                            "type": "string"
                                                                        },
                                                                        "slug": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "off": {
                                                                    "type": "string"
                                                                },
                                                                "on": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "total": {
                                                        "properties": {
                                                            "hours": {
                                                                "type": "number"
                                                            },
                                                            "minutes": {
                                                                "type": "number"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "userId": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Problem with the request arguments.  The response payload may include an error message."
                    },
                    "401": {
                        "description": "Authentication parameters missing"
                    },
                    "403": {
                        "description": "Authentication failed or rate-limit reached"
                    },
                    "404": {
                        "description": "Team or user(s) not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "A list of shift changes for a team",
                "tags": [
                    "Reporting"
                ]
            }
        },
        "/api-reporting/v2/incidents": {
            "get": {
                "description": "Retrieve incident history for your company, searching over date ranges and with filtering options.\n\nThis API may be called a maximum of once a minute.\n\nIncident requests are paginated with a offset and limit query string parameters.\n  The query for incidents is run and offset records are skipped, after which limit records will be returned.\n\nThe default offset is 0 and the default limit is 20. The maximum value allowed for limit is 100.\n\nUnless specified otherwise with the parameter currentPhase, the response will only contain resolved incidents.\n\nOn return, the total number of records available for that query will be returned in the payload as 'total'.\n",
                "parameters": [
                    {
                        "description": "Your API ID",
                        "in": "header",
                        "name": "X-VO-Api-Id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Your API Key",
                        "in": "header",
                        "name": "X-VO-Api-Key",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The offset within the set of matching incidents",
                        "in": "query",
                        "name": "offset",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "default": 0
                        }
                    },
                    {
                        "description": "The maximum number of matching incidents to return (100 max)",
                        "in": "query",
                        "name": "limit",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "maximum": 100,
                            "default": 20
                        }
                    },
                    {
                        "description": "The entity ID involved  This is the unique identifier for the entity causing the incident.",
                        "in": "query",
                        "name": "entityId",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The incident number as shown in VictorOps Multiple values and ranges are allowed: 4,5,20:50\n",
                        "in": "query",
                        "name": "incidentNumber",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Return incidents started after this timestamp Specify the timestamp in ISO8601 format",
                        "in": "query",
                        "name": "startedAfter",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Find incidents started before this timestamp  Specify the timestamp in ISO8601 format",
                        "in": "query",
                        "name": "startedBefore",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The host involved in the incident Multiple values can be separated with commas.",
                        "in": "query",
                        "name": "host",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The service involved in the incident (if any) Multiple values can be separated with commas.",
                        "in": "query",
                        "name": "service",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The current phase of the incident \"resolved\", \"triggered\" or \"acknowledged\". Multiple values can be separated with commas. By default, response contains only \"resolved\" incidents",
                        "in": "query",
                        "name": "currentPhase",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The original routing of the incident",
                        "in": "query",
                        "name": "routingKey",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The list of incidents matching the request filters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "The list of incidents in various states",
                                    "properties": {
                                        "incidents": {
                                            "description": "The incident data",
                                            "items": {
                                                "description": "Incidents contain the following fields (all should be considered optional)",
                                                "properties": {
                                                    "alertCount": {
                                                        "description": "The number of alerts received for this incident",
                                                        "type": "number"
                                                    },
                                                    "currentPhase": {
                                                        "description": "The current phase of the incident \"resolved\", \"triggered\" or \"acknowledged\".",
                                                        "type": "string"
                                                    },
                                                    "entityId": {
                                                        "description": "The unique identification of the entity being monitored that caused the incident",
                                                        "type": "string"
                                                    },
                                                    "host": {
                                                        "description": "The host on which the incident occurred",
                                                        "type": "string"
                                                    },
                                                    "incidentNumber": {
                                                        "description": "The VictorOps incident number",
                                                        "type": "string"
                                                    },
                                                    "lastAlertId": {
                                                        "description": "The unique id of the last alert for the incident",
                                                        "type": "string"
                                                    },
                                                    "lastAlertTime": {
                                                        "description": "The time of the last alert received for the incident",
                                                        "type": "string"
                                                    },
                                                    "pagedPolicies": {
                                                        "description": "The escalation policies that were triggered for the incident",
                                                        "items": {
                                                            "properties": {
                                                                "policy": {
                                                                    "properties": {
                                                                        "name": {
                                                                            "type": "string"
                                                                        },
                                                                        "slug": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "team": {
                                                                    "properties": {
                                                                        "name": {
                                                                            "type": "string"
                                                                        },
                                                                        "slug": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                }
                                                            },
                                                            "required": [
                                                                "policy"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "pagedTeams": {
                                                        "description": "The teams that were paged for the incident",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "pagedUsers": {
                                                        "description": "The users that were paged for the incident.",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "service": {
                                                        "description": "The service name causing the incident (if any)",
                                                        "type": "string"
                                                    },
                                                    "startTime": {
                                                        "description": "The time the incident started",
                                                        "type": "string"
                                                    },
                                                    "transitions": {
                                                        "description": "Transitions of the incident state over time",
                                                        "items": {
                                                            "description": "A transition of incident state",
                                                            "properties": {
                                                                "alertId": {
                                                                    "description": "The unique alert ID that caused the transition",
                                                                    "type": "string"
                                                                },
                                                                "alertUrl": {
                                                                    "description": "A URL to retrieve the details of the alert that caused the transition",
                                                                    "type": "string"
                                                                },
                                                                "at": {
                                                                    "description": "The time of the transition",
                                                                    "type": "string"
                                                                },
                                                                "by": {
                                                                    "description": "The user that caused the transition (if any)",
                                                                    "type": "string"
                                                                },
                                                                "manually": {
                                                                    "description": "If the incident transition was caused by a person",
                                                                    "type": "boolean"
                                                                },
                                                                "message": {
                                                                    "description": "The message entered by that user (if any)",
                                                                    "type": "string"
                                                                },
                                                                "name": {
                                                                    "description": "The transition name",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Problem with the request arguments.  The response payload may include an error message."
                    },
                    "401": {
                        "description": "Authentication parameters missing"
                    },
                    "403": {
                        "description": "Authentication failed or rate-limit reached"
                    },
                    "404": {
                        "description": "Path not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Get/search incident history",
                "tags": [
                    "Reporting"
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "AckOrResolveByUserRequest": {
                "properties": {
                    "message": {
                        "type": "string"
                    },
                    "userName": {
                        "type": "string"
                    }
                },
                "required": [
                    "userName"
                ],
                "type": "object"
            },
            "AckOrResolveRequest": {
                "properties": {
                    "incidentNames": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "message": {
                        "type": "string"
                    },
                    "userName": {
                        "type": "string"
                    }
                },
                "required": [
                    "userName",
                    "incidentNames"
                ],
                "type": "object"
            },
            "AckOrResolveResponse": {
                "description": "The results of ack/resolve for each incident",
                "properties": {
                    "results": {
                        "items": {
                            "description": "The results of ack/resolve for a individual incident",
                            "properties": {
                                "cmdAccepted": {
                                    "type": "boolean"
                                },
                                "entityId": {
                                    "type": "string"
                                },
                                "incidentNumber": {
                                    "type": "string"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "AckOrResolveResult": {
                "description": "The results of ack/resolve for a individual incident",
                "properties": {
                    "cmdAccepted": {
                        "type": "boolean"
                    },
                    "entityId": {
                        "type": "string"
                    },
                    "incidentNumber": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "AckUser": {
                "description": "A JSON object with first/last name and email of the user that acknowledged the incident.",
                "properties": {
                    "email": {
                        "type": "string"
                    },
                    "first": {
                        "type": "string"
                    },
                    "last": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ActiveIncidentInfo": {
                "description": "Incidents contain the following fields (all should be considered optional)",
                "properties": {
                    "alertCount": {
                        "description": "The number of alerts received for this incident",
                        "type": "number"
                    },
                    "currentPhase": {
                        "description": "The current phase of the incident \"resolved\", \"triggered\" or \"acknowledged\".",
                        "type": "string"
                    },
                    "entityId": {
                        "description": "The unique identification of the entity being monitored that caused the incident",
                        "type": "string"
                    },
                    "host": {
                        "description": "The host on which the incident occurred",
                        "type": "string"
                    },
                    "incidentNumber": {
                        "description": "The VictorOps incident number",
                        "type": "string"
                    },
                    "lastAlertId": {
                        "description": "The unique id of the last alert for the incident",
                        "type": "string"
                    },
                    "lastAlertTime": {
                        "description": "The time of the last alert received for the incident",
                        "type": "string"
                    },
                    "pagedPolicies": {
                        "description": "The escalation policies that were triggered for the incident",
                        "items": {
                            "properties": {
                                "policy": {
                                    "properties": {
                                        "name": {
                                            "type": "string"
                                        },
                                        "slug": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "team": {
                                    "properties": {
                                        "name": {
                                            "type": "string"
                                        },
                                        "slug": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "required": [
                                "policy"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "pagedTeams": {
                        "description": "The teams that were paged for the incident",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "pagedUsers": {
                        "description": "The users that were paged for the incident.",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "service": {
                        "description": "The service name causing the incident (if any)",
                        "type": "string"
                    },
                    "startTime": {
                        "description": "The time the incident started",
                        "type": "string"
                    },
                    "transitions": {
                        "description": "Transitions of the incident state over time",
                        "items": {
                            "description": "A transition of incident state",
                            "properties": {
                                "alertId": {
                                    "description": "The unique alert ID that caused the transition",
                                    "type": "string"
                                },
                                "alertUrl": {
                                    "description": "A URL to retrieve the details of the alert that caused the transition",
                                    "type": "string"
                                },
                                "at": {
                                    "description": "The time of the transition",
                                    "type": "string"
                                },
                                "by": {
                                    "description": "The user that caused the transition (if any)",
                                    "type": "string"
                                },
                                "manually": {
                                    "description": "If the incident transition was caused by a person",
                                    "type": "boolean"
                                },
                                "message": {
                                    "description": "The message entered by that user (if any)",
                                    "type": "string"
                                },
                                "name": {
                                    "description": "The transition name",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "ActiveIncidentList": {
                "description": "The list of incidents in various states",
                "properties": {
                    "incidents": {
                        "description": "The incident data",
                        "items": {
                            "description": "Incidents contain the following fields (all should be considered optional)",
                            "properties": {
                                "alertCount": {
                                    "description": "The number of alerts received for this incident",
                                    "type": "number"
                                },
                                "currentPhase": {
                                    "description": "The current phase of the incident \"resolved\", \"triggered\" or \"acknowledged\".",
                                    "type": "string"
                                },
                                "entityId": {
                                    "description": "The unique identification of the entity being monitored that caused the incident",
                                    "type": "string"
                                },
                                "host": {
                                    "description": "The host on which the incident occurred",
                                    "type": "string"
                                },
                                "incidentNumber": {
                                    "description": "The VictorOps incident number",
                                    "type": "string"
                                },
                                "lastAlertId": {
                                    "description": "The unique id of the last alert for the incident",
                                    "type": "string"
                                },
                                "lastAlertTime": {
                                    "description": "The time of the last alert received for the incident",
                                    "type": "string"
                                },
                                "pagedPolicies": {
                                    "description": "The escalation policies that were triggered for the incident",
                                    "items": {
                                        "properties": {
                                            "policy": {
                                                "properties": {
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "slug": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "team": {
                                                "properties": {
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "slug": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "required": [
                                            "policy"
                                        ],
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "pagedTeams": {
                                    "description": "The teams that were paged for the incident",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "pagedUsers": {
                                    "description": "The users that were paged for the incident.",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "service": {
                                    "description": "The service name causing the incident (if any)",
                                    "type": "string"
                                },
                                "startTime": {
                                    "description": "The time the incident started",
                                    "type": "string"
                                },
                                "transitions": {
                                    "description": "Transitions of the incident state over time",
                                    "items": {
                                        "description": "A transition of incident state",
                                        "properties": {
                                            "alertId": {
                                                "description": "The unique alert ID that caused the transition",
                                                "type": "string"
                                            },
                                            "alertUrl": {
                                                "description": "A URL to retrieve the details of the alert that caused the transition",
                                                "type": "string"
                                            },
                                            "at": {
                                                "description": "The time of the transition",
                                                "type": "string"
                                            },
                                            "by": {
                                                "description": "The user that caused the transition (if any)",
                                                "type": "string"
                                            },
                                            "manually": {
                                                "description": "If the incident transition was caused by a person",
                                                "type": "boolean"
                                            },
                                            "message": {
                                                "description": "The message entered by that user (if any)",
                                                "type": "string"
                                            },
                                            "name": {
                                                "description": "The transition name",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "AddGroupPayload": {
                "properties": {
                    "rules": {
                        "items": {
                            "properties": {
                                "contact": {
                                    "properties": {
                                        "id": {
                                            "type": "number"
                                        },
                                        "type": {
                                            "enum": [
                                                "email",
                                                "phone"
                                            ],
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": {
                                    "enum": [
                                        "push",
                                        "email",
                                        "sms",
                                        "phone"
                                    ],
                                    "example": "email",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "timeout": {
                        "enum": [
                            1,
                            5,
                            10,
                            15,
                            20,
                            25,
                            30,
                            45,
                            60
                        ],
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "AddStepPayload": {
                "properties": {
                    "contact": {
                        "properties": {
                            "id": {
                                "type": "number"
                            },
                            "type": {
                                "enum": [
                                    "email",
                                    "phone"
                                ],
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "type": {
                        "enum": [
                            "push",
                            "email",
                            "sms",
                            "phone"
                        ],
                        "example": "email",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "AddTeamMemberPayload": {
                "description": "The user information",
                "properties": {
                    "username": {
                        "type": "string"
                    }
                },
                "required": [
                    "username"
                ],
                "type": "object"
            },
            "AddTeamPayload": {
                "description": "The team information",
                "properties": {
                    "name": {
                        "type": "string"
                    }
                },
                "required": [
                    "name"
                ],
                "type": "object"
            },
            "AddTeamResponse": {
                "description": "Some info about the team",
                "properties": {
                    "_adminsUrl": {
                        "type": "string"
                    },
                    "_membersUrl": {
                        "type": "string"
                    },
                    "_policiesUrl": {
                        "type": "string"
                    },
                    "_selfUrl": {
                        "type": "string"
                    },
                    "isDefaultTeam": {
                        "type": "boolean"
                    },
                    "memberCount": {
                        "type": "number"
                    },
                    "name": {
                        "type": "string"
                    },
                    "slug": {
                        "type": "string"
                    },
                    "version": {
                        "type": "number"
                    }
                },
                "type": "object"
            },
            "AddUserPayload": {
                "description": "The user information",
                "properties": {
                    "admin": {
                        "type": "boolean"
                    },
                    "email": {
                        "format": "email",
                        "type": "string"
                    },
                    "expirationHours": {
                        "default": 24,
                        "description": "The validity duration for the invitatation/set password link sent to the added user.",
                        "type": "number"
                    },
                    "firstName": {
                        "type": "string"
                    },
                    "lastName": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    }
                },
                "required": [
                    "firstName",
                    "lastName",
                    "username",
                    "email"
                ],
                "type": "object"
            },
            "AddUserResponse": {
                "description": "Some info about the user",
                "properties": {
                    "_selfUrl": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "firstName": {
                        "type": "string"
                    },
                    "lastName": {
                        "type": "string"
                    },
                    "passwordLastUpdated": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    },
                    "verified": {
                        "description": "Whether or not this user has set their password (will always be false)",
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "Assignment": {
                "properties": {
                    "_selfUrl": {
                        "type": "string"
                    },
                    "assigned": {
                        "type": "boolean"
                    },
                    "policy": {
                        "type": "string"
                    },
                    "team": {
                        "type": "string"
                    },
                    "user": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Contact": {
                "properties": {
                    "id": {
                        "type": "number"
                    },
                    "type": {
                        "enum": [
                            "email",
                            "phone"
                        ],
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ContactDescription": {
                "enum": [
                    "Email Address",
                    "Phone Number"
                ],
                "type": "string"
            },
            "ContactDevice": {
                "properties": {
                    "_selfUrl": {
                        "type": "string"
                    },
                    "deviceType": {
                        "type": "string"
                    },
                    "extId": {
                        "type": "string"
                    },
                    "label": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ContactDeviceAdd": {
                "description": "The contact device",
                "properties": {
                    "chat_escalation_sound": {
                        "type": "string"
                    },
                    "device_label": {
                        "type": "string"
                    },
                    "escalation_notification_sound": {
                        "type": "string"
                    },
                    "resolved_notification_sound": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ContactEmailAdd": {
                "description": "The contact email",
                "properties": {
                    "email": {
                        "format": "email",
                        "type": "string"
                    },
                    "label": {
                        "type": "string"
                    },
                    "rank": {
                        "type": "integer"
                    }
                },
                "required": [
                    "label",
                    "email"
                ],
                "type": "object"
            },
            "ContactObject": {
                "properties": {
                    "description": {
                        "enum": [
                            "Email Address",
                            "Phone Number"
                        ],
                        "type": "string"
                    },
                    "type": {
                        "enum": [
                            "email",
                            "phone"
                        ],
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ContactPhoneAdd": {
                "description": "The contact phone",
                "properties": {
                    "label": {
                        "type": "string"
                    },
                    "phone": {
                        "type": "string"
                    },
                    "rank": {
                        "type": "integer"
                    }
                },
                "required": [
                    "label",
                    "phone"
                ],
                "type": "object"
            },
            "ContactType": {
                "enum": [
                    "email",
                    "phone"
                ],
                "type": "string"
            },
            "CreateIncidentRequest": {
                "properties": {
                    "details": {
                        "type": "string"
                    },
                    "summary": {
                        "type": "string"
                    },
                    "targets": {
                        "items": {
                            "properties": {
                                "slug": {
                                    "description": "User name or escalation policy slug",
                                    "type": "string"
                                },
                                "type": {
                                    "description": "Type of target",
                                    "enum": [
                                        "User",
                                        "EscalationPolicy"
                                    ],
                                    "type": "string"
                                }
                            },
                            "required": [
                                "type",
                                "slug"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "userName": {
                        "type": "string"
                    }
                },
                "required": [
                    "summary",
                    "details",
                    "userName",
                    "targets"
                ],
                "type": "object"
            },
            "CreatedIncident": {
                "properties": {
                    "error": {
                        "description": "An error message",
                        "type": "string"
                    },
                    "incidentNumber": {
                        "description": "The VictorOps incident number",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DeleteUserPayload": {
                "description": "The information about what to do with the deleted user",
                "properties": {
                    "replacement": {
                        "description": "The user to take the place of the deleted user in escalations",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "EscalationPolicy": {
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "slug": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "EscalationPolicyInfo": {
                "properties": {
                    "policy": {
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "slug": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "team": {
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "slug": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "required": [
                    "policy"
                ],
                "type": "object"
            },
            "EscalationPolicyInfoList": {
                "properties": {
                    "policies": {
                        "items": {
                            "properties": {
                                "policy": {
                                    "properties": {
                                        "name": {
                                            "type": "string"
                                        },
                                        "slug": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "team": {
                                    "properties": {
                                        "name": {
                                            "type": "string"
                                        },
                                        "slug": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "required": [
                                "policy"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "policies"
                ],
                "type": "object"
            },
            "EscalationPolicyList": {
                "properties": {
                    "policies": {
                        "items": {
                            "properties": {
                                "name": {
                                    "type": "string"
                                },
                                "slug": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "GetAlertResponse": {
                "description": "Alert details. All fields should be considered optional.",
                "properties": {
                    "ackAuthor": {
                        "description": "The user that acknowledged the incident.",
                        "type": "string"
                    },
                    "ackMsg": {
                        "description": "A user entered comment for the acknowledgment.",
                        "type": "string"
                    },
                    "entityDisplayName": {
                        "description": "Used within VictorOps to display a human-readable name for the entity.",
                        "type": "string"
                    },
                    "entityId": {
                        "description": "Identifies the entity (host, service, etc.) this alert was about.\n",
                        "type": "string"
                    },
                    "messageType": {
                        "description": "The type of alert; INFO, WARNING, ACKNOWLEDGEMENT, CRITICAL, RECOVERY\n",
                        "type": "string"
                    },
                    "monitoringTool": {
                        "description": "The name of the monitoring system software (eg. nagios, icinga, sensu, etc.)",
                        "type": "string"
                    },
                    "raw": {
                        "description": "The full, raw alert details JSON string (i.e. parse the string into a JSON object)\n",
                        "type": "string"
                    },
                    "stateMessage": {
                        "description": "Any additional status information from the alert item.",
                        "type": "string"
                    },
                    "stateStartTime": {
                        "description": "The time this entity entered its current state (seconds since epoch).",
                        "type": "number"
                    },
                    "timestamp": {
                        "description": "Timestamp of the alert in seconds since epoch.",
                        "type": "number"
                    }
                },
                "type": "object"
            },
            "IncidentInfo": {
                "description": "Incidents contain the following fields (all should be considered optional)",
                "properties": {
                    "ackTime": {
                        "description": "The time of the last acknowledgment of the incident",
                        "type": "string"
                    },
                    "ackUser": {
                        "description": "A JSON object with first/last name and email of the user that acknowledged the incident.",
                        "properties": {
                            "email": {
                                "type": "string"
                            },
                            "first": {
                                "type": "string"
                            },
                            "last": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "ackUserId": {
                        "description": "The VictorOps user id of the user that acknowledged the incident",
                        "type": "string"
                    },
                    "alertCount": {
                        "description": "The number of alerts received for this incident",
                        "type": "number"
                    },
                    "currentPhase": {
                        "description": "The current phase of the incident \"resolved\", \"triggered\" or \"acknowledged\".",
                        "type": "string"
                    },
                    "endTime": {
                        "description": "The time the incident ended",
                        "type": "string"
                    },
                    "entityDispName": {
                        "description": "The display name of the entity causing the incident",
                        "type": "string"
                    },
                    "entityId": {
                        "description": "The unique identification of the entity being monitored that caused the incident",
                        "type": "string"
                    },
                    "entityType": {
                        "description": "The type of entity causing the incident (host/service)",
                        "type": "string"
                    },
                    "host": {
                        "description": "The host on which the incident occurred",
                        "type": "string"
                    },
                    "incidentNumber": {
                        "description": "The VictorOps incident number",
                        "type": "string"
                    },
                    "lastAlertID": {
                        "description": "The unique id of the last alert for the incident",
                        "type": "string"
                    },
                    "lastAlertTime": {
                        "description": "The time of the last alert received for the incident",
                        "type": "string"
                    },
                    "service": {
                        "description": "The service name causing the incident (if any)",
                        "type": "string"
                    },
                    "startTime": {
                        "description": "The time the incident started",
                        "type": "string"
                    },
                    "teams": {
                        "description": "The teams that were paged for the incident (comma separated).",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "IncidentList": {
                "description": "The results of an incident history request",
                "properties": {
                    "incidents": {
                        "description": "An array of incident objects matching the search",
                        "items": {
                            "description": "Incidents contain the following fields (all should be considered optional)",
                            "properties": {
                                "ackTime": {
                                    "description": "The time of the last acknowledgment of the incident",
                                    "type": "string"
                                },
                                "ackUser": {
                                    "description": "A JSON object with first/last name and email of the user that acknowledged the incident.",
                                    "properties": {
                                        "email": {
                                            "type": "string"
                                        },
                                        "first": {
                                            "type": "string"
                                        },
                                        "last": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "ackUserId": {
                                    "description": "The VictorOps user id of the user that acknowledged the incident",
                                    "type": "string"
                                },
                                "alertCount": {
                                    "description": "The number of alerts received for this incident",
                                    "type": "number"
                                },
                                "currentPhase": {
                                    "description": "The current phase of the incident \"resolved\", \"triggered\" or \"acknowledged\".",
                                    "type": "string"
                                },
                                "endTime": {
                                    "description": "The time the incident ended",
                                    "type": "string"
                                },
                                "entityDispName": {
                                    "description": "The display name of the entity causing the incident",
                                    "type": "string"
                                },
                                "entityId": {
                                    "description": "The unique identification of the entity being monitored that caused the incident",
                                    "type": "string"
                                },
                                "entityType": {
                                    "description": "The type of entity causing the incident (host/service)",
                                    "type": "string"
                                },
                                "host": {
                                    "description": "The host on which the incident occurred",
                                    "type": "string"
                                },
                                "incidentNumber": {
                                    "description": "The VictorOps incident number",
                                    "type": "string"
                                },
                                "lastAlertID": {
                                    "description": "The unique id of the last alert for the incident",
                                    "type": "string"
                                },
                                "lastAlertTime": {
                                    "description": "The time of the last alert received for the incident",
                                    "type": "string"
                                },
                                "service": {
                                    "description": "The service name causing the incident (if any)",
                                    "type": "string"
                                },
                                "startTime": {
                                    "description": "The time the incident started",
                                    "type": "string"
                                },
                                "teams": {
                                    "description": "The teams that were paged for the incident (comma separated).",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "limit": {
                        "description": "The limit value passed in the request",
                        "type": "number"
                    },
                    "offset": {
                        "description": "The offset passed in the request",
                        "type": "number"
                    },
                    "total": {
                        "description": "The total number of incidents available for this search",
                        "type": "number"
                    }
                },
                "type": "object"
            },
            "IncidentTarget": {
                "properties": {
                    "slug": {
                        "description": "User name or escalation policy slug",
                        "type": "string"
                    },
                    "type": {
                        "description": "Type of target",
                        "enum": [
                            "User",
                            "EscalationPolicy"
                        ],
                        "type": "string"
                    }
                },
                "required": [
                    "type",
                    "slug"
                ],
                "type": "object"
            },
            "IncidentTransition": {
                "description": "A transition of incident state",
                "properties": {
                    "alertId": {
                        "description": "The unique alert ID that caused the transition",
                        "type": "string"
                    },
                    "alertUrl": {
                        "description": "A URL to retrieve the details of the alert that caused the transition",
                        "type": "string"
                    },
                    "at": {
                        "description": "The time of the transition",
                        "type": "string"
                    },
                    "by": {
                        "description": "The user that caused the transition (if any)",
                        "type": "string"
                    },
                    "manually": {
                        "description": "If the incident transition was caused by a person",
                        "type": "boolean"
                    },
                    "message": {
                        "description": "The message entered by that user (if any)",
                        "type": "string"
                    },
                    "name": {
                        "description": "The transition name",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ListRoutingKeysResponse": {
                "description": "Info about routing keys in the org",
                "properties": {
                    "_selfUrl": {
                        "type": "string"
                    },
                    "routingKeys": {
                        "items": {
                            "description": "Routing keys contain the following fields",
                            "properties": {
                                "isDefault": {
                                    "type": "boolean"
                                },
                                "routingKey": {
                                    "type": "string"
                                },
                                "targets": {
                                    "items": {
                                        "description": "Routing key target",
                                        "properties": {
                                            "_teamUrl": {
                                                "type": "string"
                                            },
                                            "policyName": {
                                                "type": "string"
                                            },
                                            "policySlug": {
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "ListTeamMembersResponse": {
                "description": "A list of members for the team",
                "properties": {
                    "_selfUrl": {
                        "type": "string"
                    },
                    "_teamUrl": {
                        "type": "string"
                    },
                    "members": {
                        "items": {
                            "description": "Some info about the user",
                            "properties": {
                                "firstName": {
                                    "type": "string"
                                },
                                "lastName": {
                                    "type": "string"
                                },
                                "username": {
                                    "type": "string"
                                },
                                "verified": {
                                    "description": "Whether or not this user has set their password (will always be false)",
                                    "type": "string"
                                },
                                "version": {
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "ListTeamResponse": {
                "items": {
                    "description": "Some info about the team",
                    "properties": {
                        "_adminsUrl": {
                            "type": "string"
                        },
                        "_membersUrl": {
                            "type": "string"
                        },
                        "_policiesUrl": {
                            "type": "string"
                        },
                        "_selfUrl": {
                            "type": "string"
                        },
                        "isDefaultTeam": {
                            "type": "boolean"
                        },
                        "memberCount": {
                            "type": "number"
                        },
                        "name": {
                            "type": "string"
                        },
                        "slug": {
                            "type": "string"
                        },
                        "version": {
                            "type": "number"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "ListUserResponse": {
                "description": "Some info about the user",
                "properties": {
                    "_selfUrl": {
                        "type": "string"
                    },
                    "users": {
                        "items": {
                            "description": "Some info about the user",
                            "properties": {
                                "_selfUrl": {
                                    "type": "string"
                                },
                                "createdAt": {
                                    "type": "string"
                                },
                                "email": {
                                    "type": "string"
                                },
                                "firstName": {
                                    "type": "string"
                                },
                                "lastName": {
                                    "type": "string"
                                },
                                "passwordLastUpdated": {
                                    "type": "string"
                                },
                                "username": {
                                    "type": "string"
                                },
                                "verified": {
                                    "description": "Whether or not this user has set their password (will always be false)",
                                    "type": "boolean"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "NotificationDescription": {
                "enum": [
                    "Send a push notification to all my devices",
                    "Send an email to an email address",
                    "Send an SMS to a phone number",
                    "Make a phone call to a phone number"
                ],
                "type": "string"
            },
            "NotificationObject": {
                "properties": {
                    "description": {
                        "enum": [
                            "Send a push notification to all my devices",
                            "Send an email to an email address",
                            "Send an SMS to a phone number",
                            "Make a phone call to a phone number"
                        ],
                        "type": "string"
                    },
                    "type": {
                        "enum": [
                            "push",
                            "email",
                            "sms",
                            "phone"
                        ],
                        "example": "email",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "NotificationType": {
                "enum": [
                    "push",
                    "email",
                    "sms",
                    "phone"
                ],
                "example": "email",
                "type": "string"
            },
            "OnCallAndOverrides": {
                "properties": {
                    "overrides": {
                        "items": {
                            "properties": {
                                "end": {
                                    "description": "The time the override is scheduled to end",
                                    "type": "number"
                                },
                                "orig": {
                                    "description": "The user scheduled on call (if any)",
                                    "type": "string"
                                },
                                "over": {
                                    "description": "The user overriding the scheduled on call user (if any)",
                                    "type": "string"
                                },
                                "start": {
                                    "description": "The time the override is scheduled to start",
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "schedule": {
                        "items": {
                            "properties": {
                                "oncall": {
                                    "description": "The user scheduled on call (if any)",
                                    "type": "string"
                                },
                                "overrideoncall": {
                                    "description": "The user overriding the scheduled on call user (if any)",
                                    "type": "string"
                                },
                                "policyType": {
                                    "type": "string"
                                },
                                "rolls": {
                                    "items": {
                                        "properties": {
                                            "change": {
                                                "description": "The time the period is scheduled to start",
                                                "type": "number"
                                            },
                                            "isRoll": {
                                                "type": "boolean"
                                            },
                                            "oncall": {
                                                "description": "The user scheduled on call (if any)",
                                                "type": "string"
                                            },
                                            "until": {
                                                "description": "The time the period is scheduled to end",
                                                "type": "number"
                                            }
                                        },
                                        "required": [
                                            "change",
                                            "until",
                                            "isRoll"
                                        ],
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "rotationName": {
                                    "type": "string"
                                },
                                "shiftName": {
                                    "type": "string"
                                },
                                "shiftRoll": {
                                    "type": "number"
                                }
                            },
                            "required": [
                                "policyType",
                                "rolls"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "team": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "OnCallEntry": {
                "properties": {
                    "onCallType": {
                        "enum": [
                            "user",
                            "rotation_group",
                            "rotation_group_next",
                            "rotation_group_previous",
                            "team",
                            "team_routing",
                            "webhook",
                            "email",
                            "policy_routing"
                        ],
                        "type": "string"
                    },
                    "onCallUser": {
                        "properties": {
                            "username": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "overrideOnCallUser": {
                        "properties": {
                            "username": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "rolls": {
                        "items": {
                            "properties": {
                                "end": {
                                    "description": "The on-call period end time (ISO 8601)",
                                    "type": "string"
                                },
                                "isRoll": {
                                    "type": "boolean"
                                },
                                "onCallUser": {
                                    "properties": {
                                        "username": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "start": {
                                    "description": "The on-call period start time (ISO 8601)",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "start",
                                "end",
                                "isRoll"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "rotationName": {
                        "type": "string"
                    },
                    "shiftName": {
                        "type": "string"
                    },
                    "shiftRoll": {
                        "description": "The shift roll time (ISO 8601)",
                        "type": "string"
                    }
                },
                "required": [
                    "onCallType",
                    "rolls"
                ],
                "type": "object"
            },
            "OnCallEscalationPolicyResource": {
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "slug": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "OnCallInterval": {
                "properties": {
                    "duration": {
                        "properties": {
                            "hours": {
                                "type": "number"
                            },
                            "minutes": {
                                "type": "number"
                            }
                        },
                        "type": "object"
                    },
                    "escalationPolicy": {
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "slug": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "off": {
                        "type": "string"
                    },
                    "on": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "OnCallLog": {
                "properties": {
                    "end": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "start": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "teamSlug": {
                        "type": "string"
                    },
                    "userLogs": {
                        "items": {
                            "properties": {
                                "adjustedTotal": {
                                    "properties": {
                                        "hours": {
                                            "type": "number"
                                        },
                                        "minutes": {
                                            "type": "number"
                                        }
                                    },
                                    "type": "object"
                                },
                                "log": {
                                    "items": {
                                        "properties": {
                                            "duration": {
                                                "properties": {
                                                    "hours": {
                                                        "type": "number"
                                                    },
                                                    "minutes": {
                                                        "type": "number"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "escalationPolicy": {
                                                "properties": {
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "slug": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "off": {
                                                "type": "string"
                                            },
                                            "on": {
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "total": {
                                    "properties": {
                                        "hours": {
                                            "type": "number"
                                        },
                                        "minutes": {
                                            "type": "number"
                                        }
                                    },
                                    "type": "object"
                                },
                                "userId": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "OnCallNowResource": {
                "properties": {
                    "escalationPolicy": {
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "slug": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "users": {
                        "items": {
                            "properties": {
                                "onCallUser": {
                                    "properties": {
                                        "username": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "OnCallOverride": {
                "properties": {
                    "end": {
                        "description": "The override end time (ISO 8601)",
                        "type": "string"
                    },
                    "origOnCallUser": {
                        "properties": {
                            "username": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "overrideOnCallUser": {
                        "properties": {
                            "username": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "start": {
                        "description": "The override start time (ISO 8601)",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "OnCallRoll": {
                "properties": {
                    "end": {
                        "description": "The on-call period end time (ISO 8601)",
                        "type": "string"
                    },
                    "isRoll": {
                        "type": "boolean"
                    },
                    "onCallUser": {
                        "properties": {
                            "username": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "start": {
                        "description": "The on-call period start time (ISO 8601)",
                        "type": "string"
                    }
                },
                "required": [
                    "start",
                    "end",
                    "isRoll"
                ],
                "type": "object"
            },
            "OnCallTeamResource": {
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "slug": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "OnCallTeamsResource": {
                "properties": {
                    "onCallNow": {
                        "items": {
                            "properties": {
                                "escalationPolicy": {
                                    "properties": {
                                        "name": {
                                            "type": "string"
                                        },
                                        "slug": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "users": {
                                    "items": {
                                        "properties": {
                                            "onCallUser": {
                                                "properties": {
                                                    "username": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "team": {
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "slug": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "OnCallType": {
                "enum": [
                    "user",
                    "rotation_group",
                    "rotation_group_next",
                    "rotation_group_previous",
                    "team",
                    "team_routing",
                    "webhook",
                    "email",
                    "policy_routing"
                ],
                "type": "string"
            },
            "OnCallUsersResource": {
                "properties": {
                    "onCallUser": {
                        "properties": {
                            "username": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "PagingPolicy": {
                "description": "Paging policy fields",
                "properties": {
                    "contactType": {
                        "type": "string"
                    },
                    "extId": {
                        "type": "string"
                    },
                    "order": {
                        "type": "integer"
                    },
                    "timeout": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "PagingPolicyStep": {
                "properties": {
                    "index": {
                        "type": "number"
                    },
                    "rules": {
                        "items": {
                            "properties": {
                                "contact": {
                                    "properties": {
                                        "id": {
                                            "type": "number"
                                        },
                                        "type": {
                                            "enum": [
                                                "email",
                                                "phone"
                                            ],
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "index": {
                                    "type": "number"
                                },
                                "type": {
                                    "enum": [
                                        "push",
                                        "email",
                                        "sms",
                                        "phone"
                                    ],
                                    "example": "email",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "timeout": {
                        "enum": [
                            1,
                            5,
                            10,
                            15,
                            20,
                            25,
                            30,
                            45,
                            60
                        ],
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "PagingPolicyStepRule": {
                "properties": {
                    "contact": {
                        "properties": {
                            "id": {
                                "type": "number"
                            },
                            "type": {
                                "enum": [
                                    "email",
                                    "phone"
                                ],
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "index": {
                        "type": "number"
                    },
                    "type": {
                        "enum": [
                            "push",
                            "email",
                            "sms",
                            "phone"
                        ],
                        "example": "email",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "PagingPolicyStepRuleAdd": {
                "properties": {
                    "contact": {
                        "properties": {
                            "id": {
                                "type": "number"
                            },
                            "type": {
                                "enum": [
                                    "email",
                                    "phone"
                                ],
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "type": {
                        "enum": [
                            "push",
                            "email",
                            "sms",
                            "phone"
                        ],
                        "example": "email",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Policies": {
                "description": "Paging policies accociated which this user",
                "properties": {
                    "policies": {
                        "items": {
                            "description": "Paging policy fields",
                            "properties": {
                                "contactType": {
                                    "type": "string"
                                },
                                "extId": {
                                    "type": "string"
                                },
                                "order": {
                                    "type": "integer"
                                },
                                "timeout": {
                                    "type": "integer"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "userId": {
                        "type": "integer"
                    },
                    "username": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "PolicySchedule": {
                "properties": {
                    "overrides": {
                        "items": {
                            "properties": {
                                "end": {
                                    "description": "The override end time (ISO 8601)",
                                    "type": "string"
                                },
                                "origOnCallUser": {
                                    "properties": {
                                        "username": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "overrideOnCallUser": {
                                    "properties": {
                                        "username": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "start": {
                                    "description": "The override start time (ISO 8601)",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "policy": {
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "slug": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "schedule": {
                        "items": {
                            "properties": {
                                "onCallType": {
                                    "enum": [
                                        "user",
                                        "rotation_group",
                                        "rotation_group_next",
                                        "rotation_group_previous",
                                        "team",
                                        "team_routing",
                                        "webhook",
                                        "email",
                                        "policy_routing"
                                    ],
                                    "type": "string"
                                },
                                "onCallUser": {
                                    "properties": {
                                        "username": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "overrideOnCallUser": {
                                    "properties": {
                                        "username": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "rolls": {
                                    "items": {
                                        "properties": {
                                            "end": {
                                                "description": "The on-call period end time (ISO 8601)",
                                                "type": "string"
                                            },
                                            "isRoll": {
                                                "type": "boolean"
                                            },
                                            "onCallUser": {
                                                "properties": {
                                                    "username": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "start": {
                                                "description": "The on-call period start time (ISO 8601)",
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "start",
                                            "end",
                                            "isRoll"
                                        ],
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "rotationName": {
                                    "type": "string"
                                },
                                "shiftName": {
                                    "type": "string"
                                },
                                "shiftRoll": {
                                    "description": "The shift roll time (ISO 8601)",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "onCallType",
                                "rolls"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "RemoveTeamMemberPayload": {
                "description": "The user information",
                "properties": {
                    "replacement": {
                        "type": "string"
                    }
                },
                "required": [
                    "replacement"
                ],
                "type": "object"
            },
            "Reroute": {
                "properties": {
                    "incidentNumber": {
                        "type": "string"
                    },
                    "targets": {
                        "items": {
                            "properties": {
                                "slug": {
                                    "description": "User name or escalation policy slug",
                                    "type": "string"
                                },
                                "type": {
                                    "description": "Type of target",
                                    "enum": [
                                        "User",
                                        "EscalationPolicy"
                                    ],
                                    "type": "string"
                                }
                            },
                            "required": [
                                "type",
                                "slug"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "incidentNumber",
                    "targets"
                ],
                "type": "object"
            },
            "RerouteCollection": {
                "properties": {
                    "reroutes": {
                        "items": {
                            "properties": {
                                "incidentNumber": {
                                    "type": "string"
                                },
                                "targets": {
                                    "items": {
                                        "properties": {
                                            "slug": {
                                                "description": "User name or escalation policy slug",
                                                "type": "string"
                                            },
                                            "type": {
                                                "description": "Type of target",
                                                "enum": [
                                                    "User",
                                                    "EscalationPolicy"
                                                ],
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "type",
                                            "slug"
                                        ],
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            },
                            "required": [
                                "incidentNumber",
                                "targets"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "userName": {
                        "type": "string"
                    }
                },
                "required": [
                    "userName",
                    "reroutes"
                ],
                "type": "object"
            },
            "RerouteStatus": {
                "properties": {
                    "incidentNumber": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    },
                    "success": {
                        "type": "boolean"
                    },
                    "targetStatus": {
                        "items": {
                            "properties": {
                                "message": {
                                    "type": "string"
                                },
                                "slug": {
                                    "description": "User name or escalation policy slug",
                                    "type": "string"
                                },
                                "success": {
                                    "type": "boolean"
                                }
                            },
                            "required": [
                                "slug",
                                "success"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "incidentNumber",
                    "success",
                    "targetStatus"
                ],
                "type": "object"
            },
            "RerouteStatusResponse": {
                "properties": {
                    "statuses": {
                        "items": {
                            "properties": {
                                "incidentNumber": {
                                    "type": "string"
                                },
                                "message": {
                                    "type": "string"
                                },
                                "success": {
                                    "type": "boolean"
                                },
                                "targetStatus": {
                                    "items": {
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "slug": {
                                                "description": "User name or escalation policy slug",
                                                "type": "string"
                                            },
                                            "success": {
                                                "type": "boolean"
                                            }
                                        },
                                        "required": [
                                            "slug",
                                            "success"
                                        ],
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            },
                            "required": [
                                "incidentNumber",
                                "success",
                                "targetStatus"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "RerouteTargetStatus": {
                "properties": {
                    "message": {
                        "type": "string"
                    },
                    "slug": {
                        "description": "User name or escalation policy slug",
                        "type": "string"
                    },
                    "success": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "slug",
                    "success"
                ],
                "type": "object"
            },
            "RoutingKeyInfo": {
                "description": "Routing keys contain the following fields",
                "properties": {
                    "isDefault": {
                        "type": "boolean"
                    },
                    "routingKey": {
                        "type": "string"
                    },
                    "targets": {
                        "items": {
                            "description": "Routing key target",
                            "properties": {
                                "_teamUrl": {
                                    "type": "string"
                                },
                                "policyName": {
                                    "type": "string"
                                },
                                "policySlug": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "RoutingKeyTarget": {
                "description": "Routing key target",
                "properties": {
                    "_teamUrl": {
                        "type": "string"
                    },
                    "policyName": {
                        "type": "string"
                    },
                    "policySlug": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ScheduledOverride": {
                "properties": {
                    "assignments": {
                        "items": {
                            "properties": {
                                "_selfUrl": {
                                    "type": "string"
                                },
                                "assigned": {
                                    "type": "boolean"
                                },
                                "policy": {
                                    "type": "string"
                                },
                                "team": {
                                    "type": "string"
                                },
                                "user": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "end": {
                        "description": "The override end time (ISO 8601)",
                        "type": "string"
                    },
                    "publicId": {
                        "type": "string"
                    },
                    "start": {
                        "description": "The override start time (ISO 8601).",
                        "type": "string"
                    },
                    "timezone": {
                        "type": "string"
                    },
                    "user": {
                        "properties": {
                            "firstName": {
                                "type": "string"
                            },
                            "lastName": {
                                "type": "string"
                            },
                            "username": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "ScheduledOverridePayload": {
                "properties": {
                    "end": {
                        "description": "The override end time (ISO 8601)",
                        "type": "string"
                    },
                    "start": {
                        "description": "The override start time (ISO 8601)",
                        "type": "string"
                    },
                    "timezone": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ScheduledOverridePayloadUpdate": {
                "properties": {
                    "end": {
                        "description": "The override end time (ISO 8601)",
                        "type": "string"
                    },
                    "policySlug": {
                        "type": "string"
                    },
                    "start": {
                        "description": "The override start time (ISO 8601)",
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ScheduledUser": {
                "properties": {
                    "firstName": {
                        "type": "string"
                    },
                    "lastName": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "SimpleTeamDetail": {
                "description": "Some info about the team",
                "properties": {
                    "_adminsUrl": {
                        "type": "string"
                    },
                    "_membersUrl": {
                        "type": "string"
                    },
                    "_policiesUrl": {
                        "type": "string"
                    },
                    "_selfUrl": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "slug": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "TakeRequest": {
                "properties": {
                    "fromUser": {
                        "type": "string"
                    },
                    "toUser": {
                        "type": "string"
                    }
                },
                "required": [
                    "fromUser",
                    "toUser"
                ],
                "type": "object"
            },
            "TakeResult": {
                "properties": {
                    "result": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Team": {
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "slug": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "TeamAdmin": {
                "description": "Some info about the user",
                "properties": {
                    "_selfUrl": {
                        "type": "string"
                    },
                    "firstName": {
                        "type": "string"
                    },
                    "lastName": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "TeamAdminsResponse": {
                "description": "A list of team admins for the team",
                "properties": {
                    "teamAdmins": {
                        "items": {
                            "description": "Some info about the user",
                            "properties": {
                                "_selfUrl": {
                                    "type": "string"
                                },
                                "firstName": {
                                    "type": "string"
                                },
                                "lastName": {
                                    "type": "string"
                                },
                                "username": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "TeamDetail": {
                "description": "Some info about the team",
                "properties": {
                    "_adminsUrl": {
                        "type": "string"
                    },
                    "_membersUrl": {
                        "type": "string"
                    },
                    "_policiesUrl": {
                        "type": "string"
                    },
                    "_selfUrl": {
                        "type": "string"
                    },
                    "isDefaultTeam": {
                        "type": "boolean"
                    },
                    "memberCount": {
                        "type": "number"
                    },
                    "name": {
                        "type": "string"
                    },
                    "slug": {
                        "type": "string"
                    },
                    "version": {
                        "type": "number"
                    }
                },
                "type": "object"
            },
            "TeamMember": {
                "description": "Some info about the user",
                "properties": {
                    "firstName": {
                        "type": "string"
                    },
                    "lastName": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    },
                    "verified": {
                        "description": "Whether or not this user has set their password (will always be false)",
                        "type": "string"
                    },
                    "version": {
                        "type": "number"
                    }
                },
                "type": "object"
            },
            "TeamSchedule": {
                "properties": {
                    "schedules": {
                        "items": {
                            "properties": {
                                "overrides": {
                                    "items": {
                                        "properties": {
                                            "end": {
                                                "description": "The override end time (ISO 8601)",
                                                "type": "string"
                                            },
                                            "origOnCallUser": {
                                                "properties": {
                                                    "username": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "overrideOnCallUser": {
                                                "properties": {
                                                    "username": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "start": {
                                                "description": "The override start time (ISO 8601)",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "policy": {
                                    "properties": {
                                        "name": {
                                            "type": "string"
                                        },
                                        "slug": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "schedule": {
                                    "items": {
                                        "properties": {
                                            "onCallType": {
                                                "enum": [
                                                    "user",
                                                    "rotation_group",
                                                    "rotation_group_next",
                                                    "rotation_group_previous",
                                                    "team",
                                                    "team_routing",
                                                    "webhook",
                                                    "email",
                                                    "policy_routing"
                                                ],
                                                "type": "string"
                                            },
                                            "onCallUser": {
                                                "properties": {
                                                    "username": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "overrideOnCallUser": {
                                                "properties": {
                                                    "username": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "rolls": {
                                                "items": {
                                                    "properties": {
                                                        "end": {
                                                            "description": "The on-call period end time (ISO 8601)",
                                                            "type": "string"
                                                        },
                                                        "isRoll": {
                                                            "type": "boolean"
                                                        },
                                                        "onCallUser": {
                                                            "properties": {
                                                                "username": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "start": {
                                                            "description": "The on-call period start time (ISO 8601)",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "start",
                                                        "end",
                                                        "isRoll"
                                                    ],
                                                    "type": "object"
                                                },
                                                "type": "array"
                                            },
                                            "rotationName": {
                                                "type": "string"
                                            },
                                            "shiftName": {
                                                "type": "string"
                                            },
                                            "shiftRoll": {
                                                "description": "The shift roll time (ISO 8601)",
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "onCallType",
                                            "rolls"
                                        ],
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "team": {
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "slug": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "TeamScheduleOverlayResource": {
                "properties": {
                    "end": {
                        "description": "The time the override is scheduled to end",
                        "type": "number"
                    },
                    "orig": {
                        "description": "The user scheduled on call (if any)",
                        "type": "string"
                    },
                    "over": {
                        "description": "The user overriding the scheduled on call user (if any)",
                        "type": "string"
                    },
                    "start": {
                        "description": "The time the override is scheduled to start",
                        "type": "number"
                    }
                },
                "type": "object"
            },
            "TeamScheduleResource": {
                "properties": {
                    "oncall": {
                        "description": "The user scheduled on call (if any)",
                        "type": "string"
                    },
                    "overrideoncall": {
                        "description": "The user overriding the scheduled on call user (if any)",
                        "type": "string"
                    },
                    "policyType": {
                        "type": "string"
                    },
                    "rolls": {
                        "items": {
                            "properties": {
                                "change": {
                                    "description": "The time the period is scheduled to start",
                                    "type": "number"
                                },
                                "isRoll": {
                                    "type": "boolean"
                                },
                                "oncall": {
                                    "description": "The user scheduled on call (if any)",
                                    "type": "string"
                                },
                                "until": {
                                    "description": "The time the period is scheduled to end",
                                    "type": "number"
                                }
                            },
                            "required": [
                                "change",
                                "until",
                                "isRoll"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "rotationName": {
                        "type": "string"
                    },
                    "shiftName": {
                        "type": "string"
                    },
                    "shiftRoll": {
                        "type": "number"
                    }
                },
                "required": [
                    "policyType",
                    "rolls"
                ],
                "type": "object"
            },
            "TeamScheduleRollResource": {
                "properties": {
                    "change": {
                        "description": "The time the period is scheduled to start",
                        "type": "number"
                    },
                    "isRoll": {
                        "type": "boolean"
                    },
                    "oncall": {
                        "description": "The user scheduled on call (if any)",
                        "type": "string"
                    },
                    "until": {
                        "description": "The time the period is scheduled to end",
                        "type": "number"
                    }
                },
                "required": [
                    "change",
                    "until",
                    "isRoll"
                ],
                "type": "object"
            },
            "TimeoutDescription": {
                "enum": [
                    "If still unacked after 1 minute",
                    "If still unacked after 5 minute",
                    "If still unacked after 10 minute",
                    "If still unacked after 15 minute",
                    "If still unacked after 20 minute",
                    "If still unacked after 25 minute",
                    "If still unacked after 30 minute",
                    "If still unacked after 45 minute",
                    "If still unacked after 60 minute"
                ],
                "type": "string"
            },
            "TimeoutObject": {
                "properties": {
                    "description": {
                        "enum": [
                            "If still unacked after 1 minute",
                            "If still unacked after 5 minute",
                            "If still unacked after 10 minute",
                            "If still unacked after 15 minute",
                            "If still unacked after 20 minute",
                            "If still unacked after 25 minute",
                            "If still unacked after 30 minute",
                            "If still unacked after 45 minute",
                            "If still unacked after 60 minute"
                        ],
                        "type": "string"
                    },
                    "type": {
                        "enum": [
                            1,
                            5,
                            10,
                            15,
                            20,
                            25,
                            30,
                            45,
                            60
                        ],
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "TimeoutType": {
                "enum": [
                    1,
                    5,
                    10,
                    15,
                    20,
                    25,
                    30,
                    45,
                    60
                ],
                "type": "integer"
            },
            "UpdateAssignment": {
                "properties": {
                    "policy": {
                        "description": "The policy slug",
                        "type": "string"
                    },
                    "username": {
                        "description": "The username being assinged",
                        "type": "string"
                    }
                },
                "required": [
                    "policy"
                ],
                "type": "object"
            },
            "User": {
                "properties": {
                    "username": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "UserContact": {
                "properties": {
                    "_selfUrl": {
                        "type": "string"
                    },
                    "deviceType": {
                        "type": "string"
                    },
                    "extId": {
                        "type": "string"
                    },
                    "label": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "UserLog": {
                "properties": {
                    "adjustedTotal": {
                        "properties": {
                            "hours": {
                                "type": "number"
                            },
                            "minutes": {
                                "type": "number"
                            }
                        },
                        "type": "object"
                    },
                    "log": {
                        "items": {
                            "properties": {
                                "duration": {
                                    "properties": {
                                        "hours": {
                                            "type": "number"
                                        },
                                        "minutes": {
                                            "type": "number"
                                        }
                                    },
                                    "type": "object"
                                },
                                "escalationPolicy": {
                                    "properties": {
                                        "name": {
                                            "type": "string"
                                        },
                                        "slug": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "off": {
                                    "type": "string"
                                },
                                "on": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "total": {
                        "properties": {
                            "hours": {
                                "type": "number"
                            },
                            "minutes": {
                                "type": "number"
                            }
                        },
                        "type": "object"
                    },
                    "userId": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "UserPagingPolicy": {
                "items": {
                    "properties": {
                        "index": {
                            "type": "number"
                        },
                        "rules": {
                            "items": {
                                "properties": {
                                    "contact": {
                                        "properties": {
                                            "id": {
                                                "type": "number"
                                            },
                                            "type": {
                                                "enum": [
                                                    "email",
                                                    "phone"
                                                ],
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "index": {
                                        "type": "number"
                                    },
                                    "type": {
                                        "enum": [
                                            "push",
                                            "email",
                                            "sms",
                                            "phone"
                                        ],
                                        "example": "email",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "type": "array"
                        },
                        "timeout": {
                            "enum": [
                                1,
                                5,
                                10,
                                15,
                                20,
                                25,
                                30,
                                45,
                                60
                            ],
                            "type": "integer"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "UserSchedule": {
                "properties": {
                    "teamSchedules": {
                        "items": {
                            "properties": {
                                "schedules": {
                                    "items": {
                                        "properties": {
                                            "overrides": {
                                                "items": {
                                                    "properties": {
                                                        "end": {
                                                            "description": "The override end time (ISO 8601)",
                                                            "type": "string"
                                                        },
                                                        "origOnCallUser": {
                                                            "properties": {
                                                                "username": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "overrideOnCallUser": {
                                                            "properties": {
                                                                "username": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "start": {
                                                            "description": "The override start time (ISO 8601)",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "type": "array"
                                            },
                                            "policy": {
                                                "properties": {
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "slug": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "schedule": {
                                                "items": {
                                                    "properties": {
                                                        "onCallType": {
                                                            "enum": [
                                                                "user",
                                                                "rotation_group",
                                                                "rotation_group_next",
                                                                "rotation_group_previous",
                                                                "team",
                                                                "team_routing",
                                                                "webhook",
                                                                "email",
                                                                "policy_routing"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "onCallUser": {
                                                            "properties": {
                                                                "username": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "overrideOnCallUser": {
                                                            "properties": {
                                                                "username": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "rolls": {
                                                            "items": {
                                                                "properties": {
                                                                    "end": {
                                                                        "description": "The on-call period end time (ISO 8601)",
                                                                        "type": "string"
                                                                    },
                                                                    "isRoll": {
                                                                        "type": "boolean"
                                                                    },
                                                                    "onCallUser": {
                                                                        "properties": {
                                                                            "username": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "start": {
                                                                        "description": "The on-call period start time (ISO 8601)",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "start",
                                                                    "end",
                                                                    "isRoll"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "rotationName": {
                                                            "type": "string"
                                                        },
                                                        "shiftName": {
                                                            "type": "string"
                                                        },
                                                        "shiftRoll": {
                                                            "description": "The shift roll time (ISO 8601)",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "onCallType",
                                                        "rolls"
                                                    ],
                                                    "type": "object"
                                                },
                                                "type": "array"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "team": {
                                    "properties": {
                                        "name": {
                                            "type": "string"
                                        },
                                        "slug": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "UserTeamsResponse": {
                "description": "A list of teams to which the user belongs",
                "properties": {
                    "teams": {
                        "items": {
                            "description": "Some info about the team",
                            "properties": {
                                "_adminsUrl": {
                                    "type": "string"
                                },
                                "_membersUrl": {
                                    "type": "string"
                                },
                                "_policiesUrl": {
                                    "type": "string"
                                },
                                "_selfUrl": {
                                    "type": "string"
                                },
                                "name": {
                                    "type": "string"
                                },
                                "slug": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "V1User": {
                "description": "Some info about the user",
                "properties": {
                    "_selfUrl": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "firstName": {
                        "type": "string"
                    },
                    "lastName": {
                        "type": "string"
                    },
                    "passwordLastUpdated": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    },
                    "verified": {
                        "description": "Whether or not this user has set their password (will always be false)",
                        "type": "boolean"
                    }
                },
                "type": "object"
            }
        },
        "responses": {
            "400": {
                "description": "Problem with the request arguments.  The response payload may include an error message."
            },
            "401": {
                "description": "Authentication parameters missing"
            },
            "403": {
                "description": "Authentication failed or rate-limit reached"
            },
            "404": {
                "description": "Path not found"
            },
            "500": {
                "description": "Internal Server Error"
            },
            "team-not-found": {
                "description": "Team not found"
            },
            "user-not-found": {
                "description": "User not found"
            }
        },
        "parameters": {
            "apiId": {
                "description": "Your API ID",
                "in": "header",
                "name": "X-VO-Api-Id",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "apiKey": {
                "description": "Your API Key",
                "in": "header",
                "name": "X-VO-Api-Key",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "daysFwd": {
                "description": "Days to include in returned schedule (30 max)",
                "in": "query",
                "name": "daysForward",
                "required": false,
                "schema": {
                    "type": "number",
                    "minimum": 0,
                    "maximum": 30,
                    "default": 14
                }
            },
            "daysSkip": {
                "description": "Days to skip before computing schedule to return (90 max)",
                "in": "query",
                "name": "daysSkip",
                "required": false,
                "schema": {
                    "type": "number",
                    "minimum": 0,
                    "maximum": 90,
                    "default": 0
                }
            },
            "limit": {
                "description": "The maximum number of matching incidents to return (100 max)",
                "in": "query",
                "name": "limit",
                "required": false,
                "schema": {
                    "type": "number",
                    "maximum": 100,
                    "default": 20
                }
            },
            "offset": {
                "description": "The offset within the set of matching incidents",
                "in": "query",
                "name": "offset",
                "required": false,
                "schema": {
                    "type": "number",
                    "default": 0
                }
            },
            "orgSlug": {
                "description": "Your organization slug",
                "in": "path",
                "name": "org",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "pagingPolicyRule": {
                "description": "Rule for a paging policy step",
                "in": "path",
                "name": "rule",
                "required": true,
                "schema": {
                    "type": "number"
                }
            },
            "pagingPolicyStep": {
                "description": "Paging policy step",
                "in": "path",
                "name": "step",
                "required": true,
                "schema": {
                    "type": "number"
                }
            },
            "step": {
                "description": "Step of escalation policy (3 max)",
                "in": "query",
                "name": "step",
                "required": false,
                "schema": {
                    "type": "number",
                    "minimum": 0,
                    "maximum": 3,
                    "default": 0
                }
            },
            "username": {
                "description": "Your username",
                "in": "path",
                "name": "username",
                "required": true,
                "schema": {
                    "type": "string"
                }
            }
        },
        "requestBodies": {
            "Body": {
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "incidentNames": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "message": {
                                    "type": "string"
                                },
                                "userName": {
                                    "type": "string"
                                }
                            },
                            "required": [
                                "userName",
                                "incidentNames"
                            ],
                            "type": "object"
                        }
                    }
                },
                "description": "Ack/Resolve payload",
                "required": true
            },
            "Body2": {
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "message": {
                                    "type": "string"
                                },
                                "userName": {
                                    "type": "string"
                                }
                            },
                            "required": [
                                "userName"
                            ],
                            "type": "object"
                        }
                    }
                },
                "description": "Ack/Resolve payload",
                "required": true
            },
            "Body3": {
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "fromUser": {
                                    "type": "string"
                                },
                                "toUser": {
                                    "type": "string"
                                }
                            },
                            "required": [
                                "fromUser",
                                "toUser"
                            ],
                            "type": "object"
                        }
                    }
                },
                "description": "The take on-call payload",
                "required": true
            },
            "Body4": {
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "rules": {
                                    "items": {
                                        "properties": {
                                            "contact": {
                                                "properties": {
                                                    "id": {
                                                        "type": "number"
                                                    },
                                                    "type": {
                                                        "enum": [
                                                            "email",
                                                            "phone"
                                                        ],
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": {
                                                "enum": [
                                                    "push",
                                                    "email",
                                                    "sms",
                                                    "phone"
                                                ],
                                                "example": "email",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "timeout": {
                                    "enum": [
                                        1,
                                        5,
                                        10,
                                        15,
                                        20,
                                        25,
                                        30,
                                        45,
                                        60
                                    ],
                                    "type": "integer"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "required": true
            },
            "Body5": {
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "contact": {
                                    "properties": {
                                        "id": {
                                            "type": "number"
                                        },
                                        "type": {
                                            "enum": [
                                                "email",
                                                "phone"
                                            ],
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": {
                                    "enum": [
                                        "push",
                                        "email",
                                        "sms",
                                        "phone"
                                    ],
                                    "example": "email",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "required": true
            },
            "Body6": {
                "content": {
                    "application/json": {
                        "schema": {
                            "description": "The team information",
                            "properties": {
                                "name": {
                                    "type": "string"
                                }
                            },
                            "required": [
                                "name"
                            ],
                            "type": "object"
                        }
                    }
                },
                "description": "The team information",
                "required": true
            },
            "Body7": {
                "content": {
                    "application/json": {
                        "schema": {
                            "description": "The user information",
                            "properties": {
                                "admin": {
                                    "type": "boolean"
                                },
                                "email": {
                                    "format": "email",
                                    "type": "string"
                                },
                                "expirationHours": {
                                    "default": 24,
                                    "description": "The validity duration for the invitatation/set password link sent to the added user.",
                                    "type": "number"
                                },
                                "firstName": {
                                    "type": "string"
                                },
                                "lastName": {
                                    "type": "string"
                                },
                                "username": {
                                    "type": "string"
                                }
                            },
                            "required": [
                                "firstName",
                                "lastName",
                                "username",
                                "email"
                            ],
                            "type": "object"
                        }
                    }
                },
                "required": true
            }
        }
    }
}